var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.205,1,0.521]],["body/components/AppComponent.html",[0,0.401,1,0.963,2,0.879,3,0.879,4,1.599,5,1.599,6,1.599,7,0.546,8,2.427,9,1.316,10,1.921,11,1.599,12,2.283,13,3.837,14,1.95,15,3.837,16,1.95,17,3.837,18,1.081,19,0.077,20,1.081,21,0.703,22,0.16,23,1.081,24,1.605,25,1.95,26,1.605,27,2.19,28,1.599,29,1.318,30,1.599,31,0.703,32,1.599,33,0.703,34,1.599,35,0.703,36,1.081,37,1.316,38,1.599,39,0.062,40,0.062]],["title/modules/AppModule.html",[41,0.976,42,1.185]],["body/modules/AppModule.html",[1,1.038,2,0.813,3,0.813,7,0.505,18,1.568,19,0.078,20,0.999,21,0.816,22,0.148,23,0.999,31,0.985,33,0.985,35,0.985,36,0.999,39,0.059,40,0.059,41,1.529,42,2.371,43,1.478,44,3.082,45,3.082,46,1.857,47,2.243,48,2.243,49,2.243,50,2.819,51,1.805,52,1.805,53,2.909,54,3.654,55,2.243,56,1.805,57,3.654,58,2.909,59,1.805,60,2.909,61,3.654,62,3.654,63,1.805,64,3.654,65,2.243,66,2.909,67,2.909]],["title/components/BoardComponent.html",[0,0.205,31,0.521]],["body/components/BoardComponent.html",[0,0.307,1,0.235,2,0.294,3,0.294,4,0.535,5,0.535,6,0.535,7,0.183,9,0.725,10,1.276,11,0.535,12,1.55,14,0.881,16,0.881,18,0.881,19,0.079,20,0.362,21,0.235,22,0.088,23,0.362,24,0.725,25,0.881,26,0.725,27,1.303,28,0.535,29,1.048,30,0.535,31,0.573,32,0.535,33,0.235,34,0.535,35,0.235,36,1.199,37,1.504,38,0.535,39,0.028,40,0.028,46,0.881,51,1.893,68,0.812,69,1.129,70,0.881,71,2.211,72,1.734,73,1.734,74,0.294,75,1.55,76,1.705,77,3.595,78,3.224,79,3.595,80,3.369,81,2.599,82,2.563,83,2.563,84,3.05,85,3.763,86,2.563,87,0.725,88,2.231,89,1.734,90,2.563,91,3.369,92,2.563,93,1.734,94,3.05,95,2.563,96,1.734,97,2.563,98,1.705,99,1.372,100,1.705,101,1.372,102,0.44,103,1.053,104,2.834,105,1.479,106,1.734,107,3.369,108,0.725,109,2.697,110,2.563,111,2.211,112,2.093,113,1.337,114,2.093,115,1.372,116,2.563,117,1.303,118,1.388,119,1.303,120,1.734,121,2.198,122,1.053,123,1.053,124,1.053,125,1.053,126,1.053,127,2.336,128,1.977,129,1.591,130,1.591,131,2.126,132,1.337,133,1.734,134,1.504,135,1.574,136,1.053,137,2.091,138,1.053,139,0.881,140,1.053,141,1.338,142,1.705,143,2.509,144,1.053,145,1.337,146,0.812,147,0.653,148,1.053,149,1.053,150,1.053,151,0.812,152,1.734,153,1.186,154,1.053,155,1.337,156,1.734,157,2.186,158,1.734,159,1.076,160,1.734,161,1.734,162,1.734,163,1.734,164,1.053,165,1.638,166,1.076,167,1.734,168,1.053,169,1.076,170,1.337,171,1.774,172,2.211,173,1.053,174,3.491,175,1.053,176,1.053,177,1.053,178,3.685,179,1.053,180,2.563,181,2.834,182,2.834,183,1.977,184,1.734,185,1.053,186,1.337,187,1.759,188,1.734,189,1.977,190,1.337,191,1.734,192,1.303,193,1.591,194,1.076,195,1.053,196,2.563,197,1.734,198,1.591,199,2.211,200,1.734,201,1.734,202,1.705,203,1.337,204,1.734,205,3.05,206,2.211,207,1.053,208,1.053,209,1.053,210,1.774,211,1.053,212,1.053,213,0.653,214,1.504,215,1.053,216,1.053,217,1.053,218,1.053,219,1.053,220,0.812,221,1.053,222,1.053,223,1.734,224,1.705,225,0.812,226,1.053,227,1.053,228,0.812,229,2.563,230,2.563,231,1.977,232,2.211,233,1.46,234,1.053,235,2.563,236,1.591,237,1.053,238,1.053,239,1.053,240,1.053,241,0.812,242,2.211,243,2.211,244,1.734,245,1.053,246,0.725,247,1.053,248,1.053,249,1.053,250,1.053,251,1.053,252,1.734,253,1.977,254,1.053,255,2.563,256,3.224,257,1.053,258,1.053,259,1.053,260,1.053,261,2.563,262,1.053,263,1.734,264,1.409,265,1.734,266,1.053,267,1.734,268,1.734,269,1.053,270,0.812,271,0.812,272,1.053,273,1.053,274,1.053,275,1.372,276,1.053,277,1.053,278,1.053,279,1.053,280,2.211,281,1.053,282,1.053,283,1.734,284,1.734,285,1.734,286,1.734,287,1.053,288,1.734,289,1.053,290,0.812,291,1.053,292,1.053,293,1.053,294,1.053,295,1.734]],["title/components/DocumentationComponent.html",[0,0.205,33,0.521]],["body/components/DocumentationComponent.html",[0,0.395,1,0.661,2,0.827,3,1.125,4,1.504,5,1.504,6,1.504,7,0.514,9,1.238,10,1.852,11,1.504,12,2.249,14,1.877,16,1.877,18,1.017,19,0.078,20,1.017,21,0.661,22,0.15,23,1.017,24,1.545,25,1.877,26,1.545,27,2.143,28,1.504,29,1.269,30,1.504,31,0.661,32,1.504,33,0.942,34,1.504,35,0.661,36,1.017,37,1.238,38,1.504,39,0.06,40,0.06,70,1.877,74,0.827,87,1.545,102,1.685,105,1.269,134,1.238,135,1.238,296,2.283,297,2.747,298,3.106,299,3.694,300,3.694,301,3.253,302,2.96,303,2.96,304,2.849]],["title/components/UserInputComponent.html",[0,0.205,35,0.521]],["body/components/UserInputComponent.html",[0,0.341,1,0.38,2,0.475,3,0.475,4,0.863,5,0.863,6,0.863,7,0.295,9,0.711,10,1.563,11,0.863,12,1.898,14,1.283,16,1.283,18,0.867,19,0.079,20,0.584,21,0.38,22,0.153,23,0.584,24,1.056,25,1.283,26,1.056,27,2.063,28,0.863,29,1.035,30,0.863,31,0.38,32,0.863,33,0.38,34,0.863,35,0.745,36,1.535,37,1.899,38,0.863,39,0.041,40,0.041,46,1.695,59,2.634,63,1.054,69,1.044,70,1.283,74,0.475,75,1.283,87,1.056,98,2.983,99,2.401,100,2.573,101,2.401,102,0.711,105,1.44,112,2.019,113,2.573,114,2.019,117,0.863,118,1.329,119,0.863,121,2.157,127,2.07,131,1.283,134,1.395,135,1.618,139,1.283,145,2.324,153,1.395,165,1.695,169,2.662,192,1.695,194,2.07,198,2.07,210,1.531,213,2.07,214,0.711,228,1.31,233,1.662,236,1.054,241,1.31,246,1.056,264,0.711,298,2.324,301,2.573,305,3.274,306,1.31,307,2.525,308,2.525,309,3.336,310,3.336,311,3.336,312,3.736,313,3.336,314,1.699,315,3.736,316,2.525,317,2.881,318,3.336,319,1.699,320,1.947,321,1.947,322,1.699,323,2.525,324,2.525,325,2.573,326,1.699,327,1.699,328,2.525,329,2.525,330,1.947,331,3.336,332,1.699,333,1.699,334,1.699,335,1.699,336,1.699,337,2.525,338,2.525,339,2.525,340,1.699,341,2.525,342,3.013,343,3.013,344,1.699,345,3.013,346,2.525,347,3.013,348,2.525,349,1.699,350,3.013,351,2.525,352,1.699,353,1.699,354,1.567,355,1.699,356,1.699,357,1.699,358,1.699,359,1.699,360,1.31,361,2.525,362,1.947]],["title/classes/board.html",[22,0.118,69,0.652]],["body/classes/board.html",[2,0.346,3,0.346,7,0.215,9,1.179,18,0.425,19,0.079,21,0.276,22,0.1,26,0.827,29,1.058,36,1.231,39,0.032,40,0.032,52,1.226,69,1.118,74,0.346,75,1.004,76,3.253,81,2.174,87,0.827,88,0.768,99,1.749,101,1.749,102,0.517,105,1.423,112,1.877,114,1.877,117,1.566,118,1.301,119,1.566,121,2.345,127,1.532,128,2.174,129,1.749,131,1.432,134,1.673,135,1.374,137,2.805,139,1.966,141,1.544,142,2.763,147,2.292,153,1.777,157,2.174,159,0.768,166,1.226,171,1.752,183,0.954,187,2.223,189,1.903,192,2.06,193,0.768,194,1.912,210,1.67,214,1.179,224,1.524,231,1.524,233,1.695,236,0.768,246,1.845,264,1.032,275,2.351,325,0.954,360,1.524,363,0.954,364,2.819,365,2.819,366,1.976,367,1.976,368,2.819,369,1.976,370,2.468,371,2.819,372,1.524,373,1.976,374,1.237,375,1.237,376,1.237,377,1.237,378,1.237,379,1.976,380,1.237,381,3.582,382,3.999,383,1.237,384,1.237,385,1.976,386,1.976,387,1.237,388,1.237,389,1.976,390,1.976,391,1.237,392,1.237,393,1.976,394,1.237,395,1.237,396,1.976,397,0.954,398,0.954,399,1.237,400,1.237,401,1.237,402,1.976,403,1.976,404,0.954,405,0.954,406,1.237,407,1.237,408,3.081,409,1.237,410,1.237,411,1.237,412,1.976,413,3.694,414,0.954,415,1.237,416,1.237,417,1.237,418,1.237,419,1.976,420,3.582,421,2.468,422,4.471,423,4.278,424,3.286,425,3.286,426,3.582,427,3.286,428,3.938,429,3.582,430,1.976,431,1.976,432,1.976,433,2.819,434,1.903,435,3.788,436,2.468,437,0.954,438,1.237,439,0.954]],["title/coverage.html",[440,2.44]],["body/coverage.html",[0,0.386,1,0.737,7,0.573,8,2.546,19,0.076,22,0.2,31,0.737,33,0.737,35,0.737,39,0.064,40,0.064,59,2.048,68,2.546,69,0.922,108,1.652,118,1.134,141,1.134,165,1.677,233,1.652,296,2.546,297,2.048,305,2.546,306,2.546,363,2.546,440,2.546,441,3.3,442,3.3,443,3.3,444,3.3,445,3.949,446,3.3,447,3.3,448,3.3,449,3.3,450,2.546,451,3.3,452,3.3,453,3.3,454,3.3,455,2.546,456,3.046,457,3.949,458,2.546,459,3.3,460,2.546]],["title/dependencies.html",[43,1.423,461,1.957]],["body/dependencies.html",[19,0.078,20,1.136,39,0.064,40,0.064,43,1.68,55,3.049,56,2.454,63,2.052,65,2.551,109,2.052,115,2.052,220,2.551,462,3.307,463,4.662,464,3.307,465,3.953,466,3.307,467,3.307,468,3.307,469,3.307,470,3.307,471,3.307,472,3.307,473,3.307,474,3.307,475,3.307,476,3.953,477,3.307,478,3.307,479,3.307,480,3.307,481,3.307]],["title/index.html",[74,0.547,130,1.215,482,1.957]],["body/index.html",[0,0.319,7,0.307,10,0.74,19,0.042,22,0.173,24,0.74,37,1.088,39,0.042,40,0.042,69,0.862,70,0.898,105,0.607,109,1.614,115,1.097,129,1.614,130,1.097,131,1.567,132,2.006,139,0.898,141,1.168,143,1.097,146,1.364,151,1.364,153,0.74,155,3.218,159,1.097,165,0.898,169,1.614,170,1.364,171,1.567,186,1.364,190,1.364,192,0.898,193,1.097,203,1.364,225,2.795,246,0.74,253,2.006,270,1.364,271,1.364,275,1.097,290,1.364,297,2.249,304,2.006,317,2.006,320,2.623,330,1.364,354,1.097,362,3.388,398,3.101,404,1.364,405,1.364,434,1.364,439,2.795,460,1.364,483,3.085,484,1.768,485,1.768,486,1.768,487,3.085,488,1.768,489,1.768,490,3.918,491,1.768,492,1.768,493,3.262,494,2.6,495,3.085,496,1.768,497,3.085,498,3.401,499,1.768,500,4.02,501,3.79,502,3.79,503,1.768,504,3.085,505,2.6,506,1.768,507,2.6,508,1.768,509,1.768,510,1.768,511,1.768,512,3.085,513,2.623,514,1.768,515,1.768,516,1.768,517,2.6,518,3.401,519,1.768,520,3.085,521,3.624,522,1.768,523,2.6,524,1.768,525,1.768,526,1.768,527,1.768,528,1.768,529,3.085,530,1.768,531,3.085,532,3.085,533,1.768,534,1.768,535,2.6,536,1.768,537,1.768,538,3.085,539,3.085,540,3.085,541,3.085,542,1.768,543,2.6,544,1.768,545,2.6,546,1.768,547,2.6,548,2.6,549,1.768,550,1.768,551,1.768,552,1.768,553,2.379,554,1.768,555,1.768,556,1.768,557,2.6,558,1.768,559,1.768,560,1.768,561,1.768,562,1.768,563,1.768,564,2.6,565,1.768,566,1.768,567,1.768,568,1.768,569,1.768,570,1.768,571,1.768,572,1.768,573,1.768,574,1.768,575,1.768,576,1.768,577,1.768,578,1.768,579,1.768,580,2.6,581,1.768,582,3.085,583,1.768,584,1.768,585,1.768,586,1.768,587,1.768,588,2.6,589,1.768,590,1.768,591,1.768,592,1.768,593,1.768,594,1.768,595,1.768,596,2.6,597,2.6,598,1.768,599,2.6,600,2.6,601,1.768,602,2.6,603,1.768,604,3.085,605,1.768,606,3.085,607,1.768,608,1.768,609,3.085,610,1.768,611,1.768,612,1.768,613,1.768,614,1.768,615,1.768,616,3.085,617,2.6,618,3.085,619,2.6,620,1.768,621,1.768,622,1.768,623,1.768,624,2.6,625,1.768,626,1.768,627,1.768,628,1.768,629,1.768,630,2.6,631,1.768,632,1.768,633,1.768,634,1.768,635,1.768,636,1.768,637,1.768,638,1.768,639,1.768,640,1.768,641,1.768,642,1.768,643,1.768,644,1.768,645,1.768,646,1.768,647,1.768,648,1.768,649,1.768,650,1.768,651,1.768,652,1.768,653,1.768,654,2.6,655,1.768,656,1.768,657,1.768,658,1.768,659,1.768,660,1.768,661,1.768,662,1.768,663,1.768,664,1.768,665,1.768,666,1.768,667,1.768,668,1.768,669,1.768,670,1.768,671,3.085,672,1.768,673,1.768,674,1.768,675,1.768,676,1.768,677,4.23,678,4.23,679,4.23,680,4.23,681,1.768,682,1.768,683,1.768,684,4.02,685,1.768,686,1.768,687,1.768,688,1.768,689,1.364,690,1.768,691,1.768,692,1.768,693,1.768,694,1.768,695,1.768,696,1.768,697,1.768,698,1.768,699,1.768,700,1.768,701,1.768,702,1.768,703,1.768]],["title/modules.html",[41,1.323]],["body/modules.html",[19,0.069,39,0.069,40,0.069,41,1.54,42,1.871,56,2.285,704,3.681,705,3.681,706,3.681]],["title/overview.html",[707,2.44]],["body/overview.html",[0,0.294,1,1.029,19,0.075,21,0.746,22,0.169,23,1.147,31,0.949,33,0.949,35,0.949,39,0.065,40,0.065,41,1.663,42,2.394,43,1.697,44,2.576,45,2.576,46,1.697,47,2.576,48,2.576,49,2.576,50,3.067,51,2.073,52,2.073,246,1.397,354,2.073,689,2.576,707,2.576]],["title/classes/tile.html",[22,0.118,141,0.801]],["body/classes/tile.html",[2,0.631,3,0.631,7,0.392,19,0.078,21,0.505,22,0.157,29,0.776,39,0.05,40,0.05,69,1.112,74,0.631,75,1.573,87,1.295,88,1.402,102,0.945,105,1.525,108,1.76,112,1.93,114,1.93,117,1.148,118,1.472,119,1.148,121,2.316,134,1.477,135,1.477,137,2.659,141,1.511,143,1.921,147,2.357,153,1.719,166,2.357,171,1.93,187,2.659,202,2.93,210,2.274,214,1.792,233,0.945,264,1.664,321,1.743,372,2.388,397,2.388,414,1.743,437,3.305,450,1.743,493,3.17,513,1.743,553,1.743,708,3.798,709,3.798,710,3.798,711,3.798,712,3.798,713,3.798,714,3.096,715,2.26,716,2.26,717,2.26,718,2.26,719,2.26,720,2.26,721,2.26,722,2.26,723,3.096,724,3.798,725,4.109,726,2.26,727,3.096,728,3.531,729,2.26,730,3.531,731,2.26,732,2.26,733,3.531,734,2.26,735,2.26,736,2.26,737,2.26]],["title/miscellaneous/variables.html",[108,1.171,738,1.51]],["body/miscellaneous/variables.html",[19,0.077,39,0.066,40,0.066,74,0.968,108,1.448,118,1.395,198,2.521,213,2.521,214,1.448,264,1.448,455,2.671,456,3.543,458,2.671,738,2.671,739,3.463,740,3.463,741,4.448,742,4.063]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":233,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"classes/tile.html":{}}}],["0.8.26",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":246,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{},"overview.html":{}}}],["1.png",{"_index":685,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["11/27",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["1].adjbomb",{"_index":427,"title":{},"body":{"classes/board.html":{}}}],["1].isbomb",{"_index":424,"title":{},"body":{"classes/board.html":{}}}],["1].isrev",{"_index":425,"title":{},"body":{"classes/board.html":{}}}],["1].revealtil",{"_index":428,"title":{},"body":{"classes/board.html":{}}}],["1][col",{"_index":423,"title":{},"body":{"classes/board.html":{}}}],["1][col].adjbomb",{"_index":432,"title":{},"body":{"classes/board.html":{}}}],["1][col].isbomb",{"_index":430,"title":{},"body":{"classes/board.html":{}}}],["1][col].isrev",{"_index":431,"title":{},"body":{"classes/board.html":{}}}],["1][col].revealtil",{"_index":433,"title":{},"body":{"classes/board.html":{}}}],["2",{"_index":354,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{},"overview.html":{}}}],["2.0.5",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["2.amazonaws.com/angularj",{"_index":680,"title":{},"body":{"index.html":{}}}],["2.png",{"_index":686,"title":{},"body":{"index.html":{}}}],["2/12",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["2499",{"_index":355,"title":{},"body":{"components/UserInputComponent.html":{}}}],["2500",{"_index":358,"title":{},"body":{"components/UserInputComponent.html":{}}}],["3",{"_index":687,"title":{},"body":{"index.html":{}}}],["3.png",{"_index":688,"title":{},"body":{"index.html":{}}}],["33",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":689,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.png",{"_index":690,"title":{},"body":{"index.html":{}}}],["40",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["41",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":691,"title":{},"body":{"index.html":{}}}],["5.png",{"_index":692,"title":{},"body":{"index.html":{}}}],["5/12",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":288,"title":{},"body":{"components/BoardComponent.html":{}}}],["6",{"_index":693,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":486,"title":{},"body":{"index.html":{}}}],["6.4.1",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["6.png",{"_index":694,"title":{},"body":{"index.html":{}}}],["6/15",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":255,"title":{},"body":{"components/BoardComponent.html":{}}}],["7",{"_index":695,"title":{},"body":{"index.html":{}}}],["7.png",{"_index":696,"title":{},"body":{"index.html":{}}}],["8",{"_index":697,"title":{},"body":{"index.html":{}}}],["8.png",{"_index":698,"title":{},"body":{"index.html":{}}}],["8/31/2018",{"_index":492,"title":{},"body":{"index.html":{}}}],["9/10/2018",{"_index":538,"title":{},"body":{"index.html":{}}}],["9/13/2018",{"_index":555,"title":{},"body":{"index.html":{}}}],["9/16/2018",{"_index":559,"title":{},"body":{"index.html":{}}}],["9/3/2018",{"_index":499,"title":{},"body":{"index.html":{}}}],["9/5/2018",{"_index":517,"title":{},"body":{"index.html":{}}}],["9/6/2018",{"_index":526,"title":{},"body":{"index.html":{}}}],["9/7/2018",{"_index":533,"title":{},"body":{"index.html":{}}}],["9/8/2018",{"_index":534,"title":{},"body":{"index.html":{}}}],["abil",{"_index":554,"title":{},"body":{"index.html":{}}}],["absent",{"_index":541,"title":{},"body":{"index.html":{}}}],["access",{"_index":511,"title":{},"body":{"index.html":{}}}],["accident",{"_index":616,"title":{},"body":{"index.html":{}}}],["accomplish",{"_index":535,"title":{},"body":{"index.html":{}}}],["accord",{"_index":394,"title":{},"body":{"classes/board.html":{}}}],["accordingli",{"_index":397,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["activ",{"_index":133,"title":{},"body":{"components/BoardComponent.html":{}}}],["actual_compon",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["ad",{"_index":553,"title":{},"body":{"index.html":{},"classes/tile.html":{}}}],["add",{"_index":663,"title":{},"body":{"index.html":{}}}],["adjac",{"_index":396,"title":{},"body":{"classes/board.html":{}}}],["adjbomb",{"_index":708,"title":{},"body":{"classes/tile.html":{}}}],["adjust",{"_index":144,"title":{},"body":{"components/BoardComponent.html":{}}}],["again",{"_index":272,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert",{"_index":149,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"congratul",{"_index":287,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"no",{"_index":269,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"w",{"_index":289,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"y",{"_index":279,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert('cel",{"_index":356,"title":{},"body":{"components/UserInputComponent.html":{}}}],["allow",{"_index":148,"title":{},"body":{"components/BoardComponent.html":{}}}],["alreadi",{"_index":727,"title":{},"body":{"classes/tile.html":{}}}],["angular",{"_index":225,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"components/UserInputComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["anyth",{"_index":632,"title":{},"body":{"index.html":{}}}],["app",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"index.html":{}}}],["app.compon",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":547,"title":{},"body":{"index.html":{}}}],["applic",{"_index":181,"title":{},"body":{"components/BoardComponent.html":{}}}],["appmodul",{"_index":42,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["at",{"_index":536,"title":{},"body":{"index.html":{}}}],["austin",{"_index":539,"title":{},"body":{"index.html":{}}}],["bad",{"_index":631,"title":{},"body":{"index.html":{}}}],["base",{"_index":496,"title":{},"body":{"index.html":{}}}],["basic",{"_index":567,"title":{},"body":{"index.html":{}}}],["be",{"_index":193,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"index.html":{}}}],["befor",{"_index":624,"title":{},"body":{"index.html":{}}}],["begin",{"_index":636,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":188,"title":{},"body":{"components/BoardComponent.html":{}}}],["between",{"_index":529,"title":{},"body":{"index.html":{}}}],["biggest",{"_index":585,"title":{},"body":{"index.html":{}}}],["blake",{"_index":500,"title":{},"body":{"index.html":{}}}],["board",{"_index":69,"title":{"classes/board.html":{}},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"index.html":{},"classes/tile.html":{}}}],["board'},{'nam",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["board(this.rowcount",{"_index":240,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.css",{"_index":72,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":73,"title":{},"body":{"components/BoardComponent.html":{}}}],["board/board.compon",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["boardcompon",{"_index":31,"title":{"components/BoardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boardformgroup",{"_index":309,"title":{},"body":{"components/UserInputComponent.html":{}}}],["bomb",{"_index":275,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"index.html":{}}}],["bombcheck",{"_index":366,"title":{},"body":{"classes/board.html":{}}}],["bombcheck(row",{"_index":379,"title":{},"body":{"classes/board.html":{}}}],["bombcount",{"_index":350,"title":{},"body":{"components/UserInputComponent.html":{}}}],["boolean",{"_index":210,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["bootstrap",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bottom",{"_index":436,"title":{},"body":{"classes/board.html":{}}}],["bound",{"_index":386,"title":{},"body":{"classes/board.html":{}}}],["boundscheck",{"_index":367,"title":{},"body":{"classes/board.html":{}}}],["boundscheck(row",{"_index":383,"title":{},"body":{"classes/board.html":{}}}],["branch",{"_index":606,"title":{},"body":{"index.html":{}}}],["brows",{"_index":706,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":545,"title":{},"body":{"index.html":{}}}],["bunti",{"_index":571,"title":{},"body":{"index.html":{}}}],["bunty'",{"_index":501,"title":{},"body":{"index.html":{}}}],["calcul",{"_index":393,"title":{},"body":{"classes/board.html":{}}}],["call",{"_index":127,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["came",{"_index":647,"title":{},"body":{"index.html":{}}}],["ceas",{"_index":410,"title":{},"body":{"classes/board.html":{}}}],["cellcount",{"_index":349,"title":{},"body":{"components/UserInputComponent.html":{}}}],["challeng",{"_index":582,"title":{},"body":{"index.html":{}}}],["chang",{"_index":166,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["cheat",{"_index":88,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["cheat_rev",{"_index":128,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["cheatrev",{"_index":437,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["check",{"_index":139,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{}}}],["cite",{"_index":666,"title":{},"body":{"index.html":{}}}],["class",{"_index":22,"title":{"classes/board.html":{},"classes/tile.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"classes/tile.html":{}}}],["cli",{"_index":484,"title":{},"body":{"index.html":{}}}],["click",{"_index":171,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"index.html":{},"classes/tile.html":{}}}],["clicked(right",{"_index":723,"title":{},"body":{"classes/tile.html":{}}}],["clock",{"_index":200,"title":{},"body":{"components/BoardComponent.html":{}}}],["clone",{"_index":508,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":304,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["col",{"_index":137,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["colcount",{"_index":364,"title":{},"body":{"classes/board.html":{}}}],["collabor",{"_index":510,"title":{},"body":{"index.html":{}}}],["colum",{"_index":621,"title":{},"body":{"index.html":{}}}],["column",{"_index":194,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["columncount",{"_index":98,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["commun",{"_index":575,"title":{},"body":{"index.html":{}}}],["complet",{"_index":158,"title":{},"body":{"components/BoardComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["condit",{"_index":111,"title":{},"body":{"components/BoardComponent.html":{}}}],["conflict",{"_index":600,"title":{},"body":{"index.html":{}}}],["confus",{"_index":612,"title":{},"body":{"index.html":{}}}],["console.log(\"in",{"_index":293,"title":{},"body":{"components/BoardComponent.html":{}}}],["console.log(this.cheatrev",{"_index":735,"title":{},"body":{"classes/tile.html":{}}}],["constructor",{"_index":102,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["constructor(formbuild",{"_index":314,"title":{},"body":{"components/UserInputComponent.html":{}}}],["constructor(priv",{"_index":228,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["constructor(row",{"_index":372,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["constructor(st",{"_index":103,"title":{},"body":{"components/BoardComponent.html":{}}}],["contain",{"_index":405,"title":{},"body":{"classes/board.html":{},"index.html":{}}}],["convert",{"_index":197,"title":{},"body":{"components/BoardComponent.html":{}}}],["coordin",{"_index":382,"title":{},"body":{"classes/board.html":{}}}],["core",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":325,"title":{},"body":{"components/UserInputComponent.html":{},"classes/board.html":{}}}],["correctli",{"_index":203,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["count",{"_index":145,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["coverag",{"_index":440,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crash",{"_index":615,"title":{},"body":{"index.html":{}}}],["creat",{"_index":317,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{}}}],["createform",{"_index":311,"title":{},"body":{"components/UserInputComponent.html":{}}}],["creation",{"_index":514,"title":{},"body":{"index.html":{}}}],["current",{"_index":140,"title":{},"body":{"components/BoardComponent.html":{}}}],["day",{"_index":630,"title":{},"body":{"index.html":{}}}],["dd",{"_index":260,"title":{},"body":{"components/BoardComponent.html":{}}}],["dealt",{"_index":584,"title":{},"body":{"index.html":{}}}],["decid",{"_index":494,"title":{},"body":{"index.html":{}}}],["decim",{"_index":623,"title":{},"body":{"index.html":{}}}],["declar",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":213,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":105,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{},"classes/tile.html":{}}}],["definit",{"_index":662,"title":{},"body":{"index.html":{}}}],["delet",{"_index":604,"title":{},"body":{"index.html":{}}}],["demo",{"_index":618,"title":{},"body":{"index.html":{}}}],["depend",{"_index":43,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["determin",{"_index":186,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["dey",{"_index":572,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":328,"title":{},"body":{"components/UserInputComponent.html":{}}}],["dialogu",{"_index":156,"title":{},"body":{"components/BoardComponent.html":{}}}],["didn't",{"_index":626,"title":{},"body":{"index.html":{}}}],["differ",{"_index":634,"title":{},"body":{"index.html":{}}}],["digit",{"_index":199,"title":{},"body":{"components/BoardComponent.html":{}}}],["digitaltim",{"_index":77,"title":{},"body":{"components/BoardComponent.html":{}}}],["direct",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["discov",{"_index":649,"title":{},"body":{"index.html":{}}}],["discuss",{"_index":518,"title":{},"body":{"index.html":{}}}],["display",{"_index":227,"title":{},"body":{"components/BoardComponent.html":{}}}],["divid",{"_index":566,"title":{},"body":{"index.html":{}}}],["do",{"_index":648,"title":{},"body":{"index.html":{}}}],["document",{"_index":297,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{},"index.html":{}}}],["documentation'},{'nam",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["documentation.component.css",{"_index":299,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.html",{"_index":300,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation/documentation.compon",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["documentationcompon",{"_index":33,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["done",{"_index":531,"title":{},"body":{"index.html":{}}}],["download",{"_index":504,"title":{},"body":{"index.html":{}}}],["due",{"_index":661,"title":{},"body":{"index.html":{}}}],["dure",{"_index":635,"title":{},"body":{"index.html":{}}}],["dynam",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":439,"title":{},"body":{"classes/board.html":{},"index.html":{}}}],["easier",{"_index":516,"title":{},"body":{"index.html":{}}}],["elaps",{"_index":206,"title":{},"body":{"components/BoardComponent.html":{}}}],["element",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["empti",{"_index":404,"title":{},"body":{"classes/board.html":{},"index.html":{}}}],["encount",{"_index":290,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["end",{"_index":157,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["environ",{"_index":456,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":596,"title":{},"body":{"index.html":{}}}],["etc",{"_index":581,"title":{},"body":{"index.html":{}}}],["event.preventdefault",{"_index":415,"title":{},"body":{"classes/board.html":{}}}],["everyth",{"_index":665,"title":{},"body":{"index.html":{}}}],["exce",{"_index":357,"title":{},"body":{"components/UserInputComponent.html":{}}}],["exeed",{"_index":259,"title":{},"body":{"components/BoardComponent.html":{}}}],["exist",{"_index":147,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["export",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"overview.html":{},"classes/tile.html":{}}}],["failur",{"_index":291,"title":{},"body":{"components/BoardComponent.html":{}}}],["fals",{"_index":214,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["fan",{"_index":403,"title":{},"body":{"classes/board.html":{}}}],["favicon",{"_index":669,"title":{},"body":{"index.html":{}}}],["featur",{"_index":617,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":329,"title":{},"body":{"components/UserInputComponent.html":{}}}],["few",{"_index":560,"title":{},"body":{"index.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"index.html":{},"classes/tile.html":{}}}],["finish",{"_index":561,"title":{},"body":{"index.html":{}}}],["first",{"_index":660,"title":{},"body":{"index.html":{}}}],["fix",{"_index":548,"title":{},"body":{"index.html":{}}}],["flag",{"_index":143,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{},"classes/tile.html":{}}}],["flagcheck",{"_index":89,"title":{},"body":{"components/BoardComponent.html":{}}}],["flagcheck(row",{"_index":136,"title":{},"body":{"components/BoardComponent.html":{}}}],["flagcount",{"_index":78,"title":{},"body":{"components/BoardComponent.html":{}}}],["flaggedmin",{"_index":79,"title":{},"body":{"components/BoardComponent.html":{}}}],["flagtil",{"_index":712,"title":{},"body":{"classes/tile.html":{}}}],["font",{"_index":674,"title":{},"body":{"index.html":{}}}],["for(let",{"_index":419,"title":{},"body":{"classes/board.html":{}}}],["form",{"_index":639,"title":{},"body":{"index.html":{}}}],["format",{"_index":201,"title":{},"body":{"components/BoardComponent.html":{}}}],["formbuild",{"_index":315,"title":{},"body":{"components/UserInputComponent.html":{}}}],["formgroup",{"_index":331,"title":{},"body":{"components/UserInputComponent.html":{}}}],["formsmodul",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":544,"title":{},"body":{"index.html":{}}}],["freez",{"_index":625,"title":{},"body":{"index.html":{}}}],["fucntion",{"_index":438,"title":{},"body":{"classes/board.html":{}}}],["function",{"_index":129,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"index.html":{}}}],["g415",{"_index":528,"title":{},"body":{"index.html":{}}}],["gain",{"_index":509,"title":{},"body":{"index.html":{}}}],["game",{"_index":131,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{}}}],["game/covered.png",{"_index":681,"title":{},"body":{"index.html":{}}}],["game/empty.png",{"_index":682,"title":{},"body":{"index.html":{}}}],["game/mine.png",{"_index":683,"title":{},"body":{"index.html":{}}}],["game/numb",{"_index":684,"title":{},"body":{"index.html":{}}}],["gameoverdialog",{"_index":90,"title":{},"body":{"components/BoardComponent.html":{}}}],["gener",{"_index":132,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["get",{"_index":482,"title":{"index.html":{}},"body":{}}],["github",{"_index":512,"title":{},"body":{"index.html":{}}}],["given",{"_index":381,"title":{},"body":{"classes/board.html":{}}}],["go",{"_index":658,"title":{},"body":{"index.html":{}}}],["good",{"_index":593,"title":{},"body":{"index.html":{}}}],["googl",{"_index":592,"title":{},"body":{"index.html":{}}}],["gotten",{"_index":530,"title":{},"body":{"index.html":{}}}],["group",{"_index":523,"title":{},"body":{"index.html":{}}}],["grove",{"_index":570,"title":{},"body":{"index.html":{}}}],["happen",{"_index":628,"title":{},"body":{"index.html":{}}}],["haswon",{"_index":80,"title":{},"body":{"components/BoardComponent.html":{}}}],["heirarchi",{"_index":525,"title":{},"body":{"index.html":{}}}],["help",{"_index":652,"title":{},"body":{"index.html":{}}}],["hit",{"_index":408,"title":{},"body":{"classes/board.html":{}}}],["hour",{"_index":256,"title":{},"body":{"components/BoardComponent.html":{}}}],["hous",{"_index":502,"title":{},"body":{"index.html":{}}}],["howl",{"_index":222,"title":{},"body":{"components/BoardComponent.html":{}}}],["howler",{"_index":223,"title":{},"body":{"components/BoardComponent.html":{}}}],["html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"index.html":{}}}],["http://lui",{"_index":677,"title":{},"body":{"index.html":{}}}],["http://www.simplygoodcode.com/2014/04/angularj",{"_index":700,"title":{},"body":{"index.html":{}}}],["https://compodoc.github.io/compodoc",{"_index":668,"title":{},"body":{"index.html":{}}}],["https://fontawesome.com/icons/bomb?style=solid",{"_index":670,"title":{},"body":{"index.html":{}}}],["https://fontawesome.com/v4.7.0/icon/book",{"_index":672,"title":{},"body":{"index.html":{}}}],["https://fontawesome.com/v4.7.0/icon/github",{"_index":673,"title":{},"body":{"index.html":{}}}],["https://fonts.google.com/specimen/jura",{"_index":675,"title":{},"body":{"index.html":{}}}],["https://minesweep",{"_index":488,"title":{},"body":{"index.html":{}}}],["https://www.npmjs.com/package/ng2",{"_index":667,"title":{},"body":{"index.html":{}}}],["icon",{"_index":671,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["if(!this.cheatrev",{"_index":736,"title":{},"body":{"classes/tile.html":{}}}],["if(!this.isgameov",{"_index":273,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(!this.stoptim",{"_index":251,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.board.rows[row][col].isbomb",{"_index":265,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.board.rows[row][col].isflag",{"_index":281,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.flaggedmin",{"_index":266,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.isflag",{"_index":737,"title":{},"body":{"classes/tile.html":{}}}],["ii/index.html",{"_index":703,"title":{},"body":{"index.html":{}}}],["imag",{"_index":725,"title":{},"body":{"classes/tile.html":{}}}],["implement",{"_index":70,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"index.html":{}}}],["import",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["index",{"_index":74,"title":{"index.html":{}},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":576,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["inform",{"_index":170,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["init",{"_index":116,"title":{},"body":{"components/BoardComponent.html":{}}}],["initi",{"_index":107,"title":{},"body":{"components/BoardComponent.html":{}}}],["input",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"index.html":{}}}],["input.compon",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["input.component.css",{"_index":307,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.html",{"_index":308,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.t",{"_index":306,"title":{},"body":{"components/UserInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:107",{"_index":322,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:14",{"_index":332,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:15",{"_index":333,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:16",{"_index":335,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:17",{"_index":334,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:18",{"_index":336,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:19",{"_index":316,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:33",{"_index":326,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:44",{"_index":319,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:60",{"_index":327,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input/us",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"components/UserInputComponent.html":{},"coverage.html":{}}}],["inspir",{"_index":699,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":318,"title":{},"body":{"components/UserInputComponent.html":{}}}],["instead",{"_index":656,"title":{},"body":{"index.html":{}}}],["isbomb",{"_index":709,"title":{},"body":{"classes/tile.html":{}}}],["isflag",{"_index":710,"title":{},"body":{"classes/tile.html":{}}}],["isgameov",{"_index":81,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["isoutofflag",{"_index":82,"title":{},"body":{"components/BoardComponent.html":{}}}],["isrev",{"_index":711,"title":{},"body":{"classes/tile.html":{}}}],["issu",{"_index":597,"title":{},"body":{"index.html":{}}}],["isvalid",{"_index":352,"title":{},"body":{"components/UserInputComponent.html":{}}}],["it'",{"_index":191,"title":{},"body":{"components/BoardComponent.html":{}}}],["iter",{"_index":196,"title":{},"body":{"components/BoardComponent.html":{}}}],["javascript",{"_index":503,"title":{},"body":{"index.html":{}}}],["jordan",{"_index":543,"title":{},"body":{"index.html":{}}}],["js",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["know",{"_index":161,"title":{},"body":{"components/BoardComponent.html":{}}}],["lab",{"_index":542,"title":{},"body":{"index.html":{}}}],["last",{"_index":532,"title":{},"body":{"index.html":{}}}],["later",{"_index":521,"title":{},"body":{"index.html":{}}}],["learn",{"_index":586,"title":{},"body":{"index.html":{}}}],["led",{"_index":645,"title":{},"body":{"index.html":{}}}],["leep",{"_index":527,"title":{},"body":{"index.html":{}}}],["left",{"_index":189,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["legend",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"overview.html":{}}}],["let",{"_index":160,"title":{},"body":{"components/BoardComponent.html":{}}}],["link",{"_index":487,"title":{},"body":{"index.html":{}}}],["list",{"_index":557,"title":{},"body":{"index.html":{}}}],["live",{"_index":292,"title":{},"body":{"components/BoardComponent.html":{}}}],["log",{"_index":491,"title":{},"body":{"index.html":{}}}],["logic",{"_index":568,"title":{},"body":{"index.html":{}}}],["longer",{"_index":610,"title":{},"body":{"index.html":{}}}],["look",{"_index":552,"title":{},"body":{"index.html":{}}}],["loos",{"_index":644,"title":{},"body":{"index.html":{}}}],["lost",{"_index":163,"title":{},"body":{"components/BoardComponent.html":{}}}],["lot",{"_index":591,"title":{},"body":{"index.html":{}}}],["made",{"_index":556,"title":{},"body":{"index.html":{}}}],["make",{"_index":513,"title":{},"body":{"index.html":{},"classes/tile.html":{}}}],["mani",{"_index":395,"title":{},"body":{"classes/board.html":{}}}],["master",{"_index":609,"title":{},"body":{"index.html":{}}}],["match",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["math.floor(minut",{"_index":257,"title":{},"body":{"components/BoardComponent.html":{}}}],["math.floor(this.timercount",{"_index":254,"title":{},"body":{"components/BoardComponent.html":{}}}],["matinputmodul",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":620,"title":{},"body":{"index.html":{}}}],["mckenna",{"_index":569,"title":{},"body":{"index.html":{}}}],["meet",{"_index":490,"title":{},"body":{"index.html":{}}}],["member",{"_index":493,"title":{},"body":{"index.html":{},"classes/tile.html":{}}}],["member'",{"_index":642,"title":{},"body":{"index.html":{}}}],["merg",{"_index":599,"title":{},"body":{"index.html":{}}}],["messag",{"_index":622,"title":{},"body":{"index.html":{}}}],["met",{"_index":590,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["method",{"_index":87,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["middl",{"_index":549,"title":{},"body":{"index.html":{}}}],["mine",{"_index":192,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{}}}],["minecount",{"_index":99,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["mines_plac",{"_index":416,"title":{},"body":{"classes/board.html":{}}}],["minesweep",{"_index":362,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{}}}],["minut",{"_index":253,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["miscellan",{"_index":738,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":280,"title":{},"body":{"components/BoardComponent.html":{}}}],["model",{"_index":551,"title":{},"body":{"index.html":{}}}],["models/board",{"_index":221,"title":{},"body":{"components/BoardComponent.html":{}}}],["modul",{"_index":41,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":651,"title":{},"body":{"index.html":{}}}],["much",{"_index":650,"title":{},"body":{"index.html":{}}}],["name",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["necessari",{"_index":146,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["need",{"_index":320,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{}}}],["new",{"_index":165,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"index.html":{}}}],["newboard",{"_index":312,"title":{},"body":{"components/UserInputComponent.html":{}}}],["newgam",{"_index":91,"title":{},"body":{"components/BoardComponent.html":{}}}],["next",{"_index":498,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":220,"title":{},"body":{"components/BoardComponent.html":{},"dependencies.html":{}}}],["ngmodul",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["ngonchang",{"_index":92,"title":{},"body":{"components/BoardComponent.html":{}}}],["ngoninit",{"_index":301,"title":{},"body":{"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["non",{"_index":285,"title":{},"body":{"components/BoardComponent.html":{}}}],["none",{"_index":113,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["notic",{"_index":627,"title":{},"body":{"index.html":{}}}],["now",{"_index":324,"title":{},"body":{"components/UserInputComponent.html":{}}}],["npm",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["num",{"_index":100,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["number",{"_index":121,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["numofcolumn",{"_index":347,"title":{},"body":{"components/UserInputComponent.html":{}}}],["numofrow",{"_index":345,"title":{},"body":{"components/UserInputComponent.html":{}}}],["object",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["old",{"_index":594,"title":{},"body":{"index.html":{}}}],["on",{"_index":602,"title":{},"body":{"index.html":{}}}],["onc",{"_index":406,"title":{},"body":{"classes/board.html":{}}}],["onchang",{"_index":71,"title":{},"body":{"components/BoardComponent.html":{}}}],["oninit",{"_index":298,"title":{},"body":{"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["option",{"_index":119,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["otherwis",{"_index":183,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["out",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"classes/board.html":{},"overview.html":{}}}],["over",{"_index":190,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["overcom",{"_index":583,"title":{},"body":{"index.html":{}}}],["overlap",{"_index":646,"title":{},"body":{"index.html":{}}}],["overview",{"_index":707,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":461,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":550,"title":{},"body":{"index.html":{}}}],["pancak",{"_index":537,"title":{},"body":{"index.html":{}}}],["param",{"_index":224,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["paramet",{"_index":117,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["part",{"_index":702,"title":{},"body":{"index.html":{}}}],["particular",{"_index":653,"title":{},"body":{"index.html":{}}}],["pass",{"_index":330,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{}}}],["perez.s3",{"_index":678,"title":{},"body":{"index.html":{}}}],["person",{"_index":603,"title":{},"body":{"index.html":{}}}],["peterson",{"_index":574,"title":{},"body":{"index.html":{}}}],["place",{"_index":142,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["placemin",{"_index":368,"title":{},"body":{"classes/board.html":{}}}],["placenumb",{"_index":369,"title":{},"body":{"classes/board.html":{}}}],["placenumber(row",{"_index":391,"title":{},"body":{"classes/board.html":{}}}],["plan",{"_index":641,"title":{},"body":{"index.html":{}}}],["platform",{"_index":589,"title":{},"body":{"index.html":{}}}],["play",{"_index":172,"title":{},"body":{"components/BoardComponent.html":{}}}],["playaudio",{"_index":93,"title":{},"body":{"components/BoardComponent.html":{}}}],["playaudio(sound",{"_index":173,"title":{},"body":{"components/BoardComponent.html":{}}}],["pop",{"_index":150,"title":{},"body":{"components/BoardComponent.html":{}}}],["post",{"_index":114,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["pre",{"_index":112,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["present",{"_index":155,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["previous",{"_index":607,"title":{},"body":{"index.html":{}}}],["problem",{"_index":654,"title":{},"body":{"index.html":{}}}],["process",{"_index":515,"title":{},"body":{"index.html":{}}}],["product",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":701,"title":{},"body":{"index.html":{}}}],["project",{"_index":483,"title":{},"body":{"index.html":{}}}],["project.firebaseapp.com/assets/documentation/index.html",{"_index":489,"title":{},"body":{"index.html":{}}}],["properti",{"_index":75,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["provid",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"overview.html":{}}}],["public",{"_index":76,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["push",{"_index":608,"title":{},"body":{"index.html":{}}}],["random",{"_index":390,"title":{},"body":{"classes/board.html":{}}}],["reach",{"_index":407,"title":{},"body":{"classes/board.html":{}}}],["reactiveformsmodul",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["reappear",{"_index":611,"title":{},"body":{"index.html":{}}}],["recurs",{"_index":402,"title":{},"body":{"classes/board.html":{}}}],["recursive_rev",{"_index":370,"title":{},"body":{"classes/board.html":{}}}],["recursive_reveal(row",{"_index":400,"title":{},"body":{"classes/board.html":{}}}],["regard",{"_index":613,"title":{},"body":{"index.html":{}}}],["remain",{"_index":152,"title":{},"body":{"components/BoardComponent.html":{}}}],["remov",{"_index":270,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["repositori",{"_index":507,"title":{},"body":{"index.html":{}}}],["repres",{"_index":204,"title":{},"body":{"components/BoardComponent.html":{}}}],["reset",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"components/BoardComponent.html":{},"overview.html":{}}}],["resolv",{"_index":598,"title":{},"body":{"index.html":{}}}],["result",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["retrospect",{"_index":562,"title":{},"body":{"index.html":{}}}],["return",{"_index":134,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["reveal",{"_index":187,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["revealedtil",{"_index":167,"title":{},"body":{"components/BoardComponent.html":{}}}],["revealedtilescount",{"_index":83,"title":{},"body":{"components/BoardComponent.html":{}}}],["revealing/recurs",{"_index":409,"title":{},"body":{"classes/board.html":{}}}],["revealmin",{"_index":371,"title":{},"body":{"classes/board.html":{}}}],["revealtil",{"_index":713,"title":{},"body":{"classes/tile.html":{}}}],["right",{"_index":434,"title":{},"body":{"classes/board.html":{},"index.html":{}}}],["role",{"_index":643,"title":{},"body":{"index.html":{}}}],["roles/which",{"_index":524,"title":{},"body":{"index.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["row",{"_index":153,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{},"classes/tile.html":{}}}],["rowcount",{"_index":101,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["rxj",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["schedul",{"_index":497,"title":{},"body":{"index.html":{}}}],["second",{"_index":258,"title":{},"body":{"components/BoardComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["separ",{"_index":657,"title":{},"body":{"index.html":{}}}],["set",{"_index":321,"title":{},"body":{"components/UserInputComponent.html":{},"classes/tile.html":{}}}],["seth",{"_index":573,"title":{},"body":{"index.html":{}}}],["settimeout",{"_index":286,"title":{},"body":{"components/BoardComponent.html":{}}}],["setuptim",{"_index":94,"title":{},"body":{"components/BoardComponent.html":{}}}],["sever",{"_index":546,"title":{},"body":{"index.html":{}}}],["showboard",{"_index":310,"title":{},"body":{"components/UserInputComponent.html":{}}}],["simpl",{"_index":115,"title":{},"body":{"components/BoardComponent.html":{},"dependencies.html":{},"index.html":{}}}],["simpletim",{"_index":104,"title":{},"body":{"components/BoardComponent.html":{}}}],["someth",{"_index":605,"title":{},"body":{"index.html":{}}}],["sometim",{"_index":601,"title":{},"body":{"index.html":{}}}],["sound",{"_index":176,"title":{},"body":{"components/BoardComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["specif",{"_index":580,"title":{},"body":{"index.html":{}}}],["split",{"_index":564,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/board/board.component.t",{"_index":68,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/board/board.component.ts:100",{"_index":179,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:120",{"_index":195,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:15",{"_index":122,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:16",{"_index":125,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:17",{"_index":123,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:172",{"_index":175,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:18",{"_index":124,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:19",{"_index":209,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:195",{"_index":138,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:20",{"_index":208,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:21",{"_index":218,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:22",{"_index":211,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:23",{"_index":212,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:239",{"_index":185,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:24",{"_index":207,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:25",{"_index":217,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:26",{"_index":219,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:27",{"_index":216,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:274",{"_index":154,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:28",{"_index":215,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:29",{"_index":106,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:291",{"_index":126,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:54",{"_index":168,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:65",{"_index":164,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:83",{"_index":177,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/documentation/documentation.component.t",{"_index":296,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{}}}],["src/app/documentation/documentation.component.ts:11",{"_index":302,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/documentation/documentation.component.ts:15",{"_index":303,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/models/board.t",{"_index":363,"title":{},"body":{"classes/board.html":{},"coverage.html":{}}}],["src/app/models/board.ts:10",{"_index":373,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:129",{"_index":384,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:151",{"_index":380,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:168",{"_index":411,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:195",{"_index":401,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:315",{"_index":387,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:42",{"_index":388,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:5",{"_index":375,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:6",{"_index":378,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:7",{"_index":377,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:70",{"_index":392,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:8",{"_index":374,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:9",{"_index":376,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/tile.t",{"_index":450,"title":{},"body":{"coverage.html":{},"classes/tile.html":{}}}],["src/app/models/tile.ts:2",{"_index":719,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:22",{"_index":721,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:3",{"_index":717,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:4",{"_index":718,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:40",{"_index":726,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:5",{"_index":715,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:53",{"_index":722,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:6",{"_index":720,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:7",{"_index":716,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:8",{"_index":714,"title":{},"body":{"classes/tile.html":{}}}],["src/app/us",{"_index":305,"title":{},"body":{"components/UserInputComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":455,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":458,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":120,"title":{},"body":{"components/BoardComponent.html":{}}}],["stage",{"_index":637,"title":{},"body":{"index.html":{}}}],["start",{"_index":130,"title":{"index.html":{}},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["startup",{"_index":182,"title":{},"body":{"components/BoardComponent.html":{}}}],["stat",{"_index":295,"title":{},"body":{"components/BoardComponent.html":{}}}],["statement",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":159,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"index.html":{}}}],["stoptim",{"_index":84,"title":{},"body":{"components/BoardComponent.html":{}}}],["string",{"_index":174,"title":{},"body":{"components/BoardComponent.html":{}}}],["structur",{"_index":640,"title":{},"body":{"index.html":{}}}],["studio",{"_index":506,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["subscrib",{"_index":178,"title":{},"body":{"components/BoardComponent.html":{}}}],["subscribetim",{"_index":95,"title":{},"body":{"components/BoardComponent.html":{}}}],["such",{"_index":578,"title":{},"body":{"index.html":{}}}],["support",{"_index":704,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":664,"title":{},"body":{"index.html":{}}}],["svg",{"_index":705,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":460,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["tackl",{"_index":520,"title":{},"body":{"index.html":{}}}],["task",{"_index":577,"title":{},"body":{"index.html":{}}}],["team",{"_index":633,"title":{},"body":{"index.html":{}}}],["teammat",{"_index":565,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["thing",{"_index":638,"title":{},"body":{"index.html":{}}}],["this.adjbomb",{"_index":732,"title":{},"body":{"classes/tile.html":{}}}],["this.board",{"_index":239,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.cheat_rev",{"_index":294,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.isgameov",{"_index":267,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.recursive_reveal(row",{"_index":284,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.revealmin",{"_index":277,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.rows[row][col].cheatrev",{"_index":278,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.rows[row][col].cheatreveal==fals",{"_index":274,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.rows[row][col].isflag",{"_index":263,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.rows[row][col].isrev",{"_index":261,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.boardformgroup",{"_index":337,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.valid",{"_index":353,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.value.columncount",{"_index":348,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.value.minecount",{"_index":351,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.value.rowcount",{"_index":346,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boundscheck(row",{"_index":420,"title":{},"body":{"classes/board.html":{}}}],["this.cheatrev",{"_index":733,"title":{},"body":{"classes/tile.html":{}}}],["this.col",{"_index":731,"title":{},"body":{"classes/tile.html":{}}}],["this.colcount",{"_index":412,"title":{},"body":{"classes/board.html":{}}}],["this.columncount",{"_index":241,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["this.createform",{"_index":340,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.digitaltim",{"_index":252,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.flagcount",{"_index":235,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.flaggedmin",{"_index":232,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.formbuilder.group",{"_index":338,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.gameoverdialog",{"_index":268,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.haswon",{"_index":229,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.isbomb",{"_index":729,"title":{},"body":{"classes/tile.html":{}}}],["this.isflag",{"_index":730,"title":{},"body":{"classes/tile.html":{}}}],["this.isgameov",{"_index":231,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["this.isrev",{"_index":728,"title":{},"body":{"classes/tile.html":{}}}],["this.minecount",{"_index":236,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["this.newboard",{"_index":359,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.newgam",{"_index":234,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.num",{"_index":361,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.playaudio(\"b",{"_index":276,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.playaudio(\"c",{"_index":283,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.playaudio(\"f",{"_index":262,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.recursive_reveal(row",{"_index":429,"title":{},"body":{"classes/board.html":{}}}],["this.revealedtilescount",{"_index":237,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.row",{"_index":414,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["this.rowcount",{"_index":360,"title":{},"body":{"components/UserInputComponent.html":{},"classes/board.html":{}}}],["this.rows[row",{"_index":422,"title":{},"body":{"classes/board.html":{}}}],["this.rows[row][col",{"_index":435,"title":{},"body":{"classes/board.html":{}}}],["this.rows[row][col].isbomb",{"_index":418,"title":{},"body":{"classes/board.html":{}}}],["this.rows[row][col].isflag",{"_index":426,"title":{},"body":{"classes/board.html":{}}}],["this.setuptim",{"_index":238,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.showboard",{"_index":339,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.st.newtimer('tim",{"_index":245,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.st.subscribe('tim",{"_index":249,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.st.unsubscribe(this.timerid",{"_index":248,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.stoptim",{"_index":230,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.subscribetim",{"_index":247,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.tilesrev",{"_index":413,"title":{},"body":{"classes/board.html":{}}}],["this.timercount",{"_index":242,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.timerid",{"_index":243,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.updatetim",{"_index":250,"title":{},"body":{"components/BoardComponent.html":{}}}],["tile",{"_index":141,"title":{"classes/tile.html":{}},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"coverage.html":{},"index.html":{},"classes/tile.html":{}}}],["tile'",{"_index":724,"title":{},"body":{"classes/tile.html":{}}}],["tilecheck",{"_index":96,"title":{},"body":{"components/BoardComponent.html":{}}}],["tilecheck(row",{"_index":184,"title":{},"body":{"components/BoardComponent.html":{}}}],["tilesrev",{"_index":365,"title":{},"body":{"classes/board.html":{}}}],["time",{"_index":205,"title":{},"body":{"components/BoardComponent.html":{}}}],["timer",{"_index":109,"title":{},"body":{"components/BoardComponent.html":{},"dependencies.html":{},"index.html":{}}}],["timercount",{"_index":85,"title":{},"body":{"components/BoardComponent.html":{}}}],["timerid",{"_index":86,"title":{},"body":{"components/BoardComponent.html":{}}}],["togeth",{"_index":655,"title":{},"body":{"index.html":{}}}],["tonight'",{"_index":522,"title":{},"body":{"index.html":{}}}],["top",{"_index":421,"title":{},"body":{"classes/board.html":{}}}],["transfer",{"_index":323,"title":{},"body":{"components/UserInputComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["tri",{"_index":271,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["trial",{"_index":595,"title":{},"body":{"index.html":{}}}],["true",{"_index":264,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["tutori",{"_index":519,"title":{},"body":{"index.html":{}}}],["type",{"_index":118,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["types/howl",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":587,"title":{},"body":{"index.html":{}}}],["unclick",{"_index":676,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":244,"title":{},"body":{"components/BoardComponent.html":{}}}],["unsubscrib",{"_index":180,"title":{},"body":{"components/BoardComponent.html":{}}}],["until",{"_index":629,"title":{},"body":{"index.html":{}}}],["up",{"_index":151,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["updat",{"_index":202,"title":{},"body":{"components/BoardComponent.html":{},"classes/tile.html":{}}}],["updatetim",{"_index":97,"title":{},"body":{"components/BoardComponent.html":{}}}],["us",{"_index":226,"title":{},"body":{"components/BoardComponent.html":{}}}],["user",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["userinputcompon",{"_index":35,"title":{"components/UserInputComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["vaiabl",{"_index":734,"title":{},"body":{"classes/tile.html":{}}}],["valid",{"_index":169,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"index.html":{}}}],["validateform",{"_index":313,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.compose([validators.min(1",{"_index":344,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.compose([validators.min(2),validators.max(30",{"_index":341,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.pattern('^\\\\d",{"_index":343,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.requir",{"_index":342,"title":{},"body":{"components/UserInputComponent.html":{}}}],["valu",{"_index":198,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["variabl",{"_index":108,"title":{"miscellaneous/variables.html":{}},"body":{"components/BoardComponent.html":{},"coverage.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":485,"title":{},"body":{"index.html":{}}}],["visual",{"_index":505,"title":{},"body":{"index.html":{}}}],["void",{"_index":135,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["want",{"_index":389,"title":{},"body":{"classes/board.html":{}}}],["wasn't",{"_index":282,"title":{},"body":{"components/BoardComponent.html":{}}}],["web",{"_index":495,"title":{},"body":{"index.html":{}}}],["well",{"_index":588,"title":{},"body":{"index.html":{}}}],["west",{"_index":679,"title":{},"body":{"index.html":{}}}],["whatev",{"_index":659,"title":{},"body":{"index.html":{}}}],["whether",{"_index":614,"title":{},"body":{"index.html":{}}}],["while(mines_plac",{"_index":417,"title":{},"body":{"classes/board.html":{}}}],["wildman",{"_index":540,"title":{},"body":{"index.html":{}}}],["win",{"_index":110,"title":{},"body":{"components/BoardComponent.html":{}}}],["within",{"_index":385,"title":{},"body":{"classes/board.html":{}}}],["without",{"_index":399,"title":{},"body":{"classes/board.html":{}}}],["won",{"_index":162,"title":{},"body":{"components/BoardComponent.html":{}}}],["work",{"_index":398,"title":{},"body":{"classes/board.html":{},"index.html":{}}}],["wrap",{"_index":558,"title":{},"body":{"index.html":{}}}],["write",{"_index":579,"title":{},"body":{"index.html":{}}}],["writeup",{"_index":563,"title":{},"body":{"index.html":{}}}],["ye",{"_index":619,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        App Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n* App Component\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nUserInputComponent\n\nUserInputComponent\n\nAppModule -->\n\nUserInputComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BoardComponent\n                            \n                            \n                                DocumentationComponent\n                            \n                            \n                                UserInputComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { UserInputComponent } from './user-input/user-input.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material';\nimport { BoardComponent } from './board/board.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserInputComponent,\n    BoardComponent,\n    DocumentationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/board.component.ts\n\n\n    \n        Description\n    \n    \n        Board Component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board\n                            \n                            \n                                digitalTimer\n                            \n                            \n                                flagCount\n                            \n                            \n                                flaggedMines\n                            \n                            \n                                hasWon\n                            \n                            \n                                isGameOver\n                            \n                            \n                                isOutOfFlags\n                            \n                            \n                                revealedTilesCount\n                            \n                            \n                                stopTimer\n                            \n                            \n                                timerCount\n                            \n                            \n                                timerID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cheating\n                            \n                            \n                                flagCheck\n                            \n                            \n                                gameOverDialog\n                            \n                            \n                                newGame\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                playAudio\n                            \n                            \n                                setupTimer\n                            \n                            \n                                subscribeTimer\n                            \n                            \n                                tileCheck\n                            \n                            \n                                updateTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnCount\n                            \n                            \n                                mineCount\n                            \n                            \n                                num\n                            \n                            \n                                rowCount\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(st: SimpleTimer)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/board.component.ts:29\n                            \n                        \n\n                \n                    \n                            Initializes variables for timer and winning conditions.\nPre: None.\nPost: hasWon, stopTime, isGameOver, simple timer, and flaggedMines have been initalized.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        st\n                                                  \n                                                        \n                                                                    SimpleTimer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columnCount\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mineCount\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        num\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rowCount\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cheating\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheating()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:291\n                            \n                        \n\n\n                \n                    \n                            Calls the cheat_reveal() function to start cheating.\nPre: Game board is generated and game is active.\nPost: cheat_reveal() function has been called.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nflagCheck(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:195\n                            \n                        \n\n\n                \n                    \n                            Checks all conditions on current tile, places flag and adjusts flag count as necessary.\nPre: The board exists.\nPost: flag is placed if allowed, if not alert will pop up if not flags remaining.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameOverDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \ngameOverDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:274\n                            \n                        \n\n\n                \n                    \n                            Presents dialogue at the end of the game.\nPre: Game has been completed.\nPost: Stops timer and lets user know if they won or lost.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Initializes properties for a new game.\nPre: User input has changed.\nPost: flagCount, isGameOver, hasWon, revealedTiles, flaggedMines, board, and the timer component has been initalized.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Starts a new game.\nPre: User provides valid information and clicks \"play game\".\nPost: newGame is called, initializes properties for new game.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playAudio\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayAudio(sound: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:172\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sound\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setupTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetupTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Resets timerCount and subscribes the timer.\nPre: newGame has been called.\nPost: timerCount is reset and the timer is subscribed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribeTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubscribeTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes timer on application startup, subscribes timer when called otherwise\nPre: setupTimer has been called\nPost: Timer is unsubscribed on application startup, timer is subscribed otherwise\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tileCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \ntileCheck(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:239\n                            \n                        \n\n\n                \n                    \n                            Determines revealing behavior of a left-clicked tile.\nPre: User left-clicks a tile and game is not over.\nPost: tile is revealed, game ends if it's a mine.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the tile being flagged.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the tile being flagged.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Iterates the timerCount, converts value to a digital clock format, updates digitalTimer.\nPre: Timer has been subscribed.\nPost: timerCount has been iterated, digitalTimer correctly represents the time elapsed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            board\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        board:     board\n\n                    \n                \n                    \n                        \n                            Type :     board\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            digitalTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        digitalTimer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flagCount:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flaggedMines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flaggedMines:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasWon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasWon:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isGameOver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isGameOver:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutOfFlags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isOutOfFlags:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealedTilesCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        revealedTilesCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stopTimer:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnChanges, Input } from '@angular/core';\nimport { SimpleTimer } from 'ng2-simple-timer';\nimport { board } from '../models/board';\nimport {Howl, Howler} from 'howler';\n\n/**\n* Board Component\n*/\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css'],\n})\nexport class BoardComponent implements OnChanges {\n  @Input() columnCount: number;\n  @Input() rowCount: number;\n  @Input() mineCount: number;\n  @Input() num: number;\n  flaggedMines: number;\n  flagCount;\n  timerCount: number;\n  hasWon: boolean;\n  isGameOver: boolean;\n  digitalTimer: string;\n  stopTimer: boolean;\n  timerID: string;\n  revealedTilesCount: number;\n  isOutOfFlags = false;\n  public board: board;\n\n  /**\n   * Initializes variables for timer and winning conditions.\n   *\n   * Pre: None.\n   *\n   * Post: hasWon, stopTime, isGameOver, simple timer, and flaggedMines have been initalized.\n   *\n   * @param SimpleTimer Angular class used to display the elapsed time.\n   */\n  constructor(private st: SimpleTimer) {\n    this.hasWon = false;\n    this.stopTimer = false;\n    this.isGameOver = false;\n    this.flaggedMines = 0;\n  }\n\n  /**\n   * Starts a new game.\n   *\n   * Pre: User provides valid information and clicks \"play game\".\n   *\n   * Post: newGame is called, initializes properties for new game.\n   */\n  ngOnChanges() {\n    this.newGame();\n  }\n\n  /**\n   * Initializes properties for a new game.\n   *\n   * Pre: User input has changed.\n   *\n   * Post: flagCount, isGameOver, hasWon, revealedTiles, flaggedMines, board, and the timer component has been initalized.\n   */\n  newGame() {\n    this.flagCount = this.mineCount; //Initialize flagCount\n    this.isGameOver = false;\n    this.hasWon = false;\n    this.flaggedMines = 0;\n    this.revealedTilesCount = 0;\n    this.setupTimer();\n    this.board = new board(this.rowCount, this.columnCount, this.mineCount);\n\n  }\n\n  /**\n   * Resets timerCount and subscribes the timer.\n   *\n   * Pre: newGame has been called.\n   *\n   * Post: timerCount is reset and the timer is subscribed.\n   */\n  setupTimer() {\n    this.stopTimer = false;\n    this.timerCount = 0; //Reset timer count\n    if (this.timerID == undefined) //If timer has not been subscribed\n    {\n      this.st.newTimer('Timer', 1);\n      this.subscribeTimer();\n    }\n  }\n\n  /**\n   * Unsubscribes timer on application startup, subscribes timer when called otherwise\n   *\n   * Pre: setupTimer has been called\n   *\n   * Post: Timer is unsubscribed on application startup, timer is subscribed otherwise\n   */\n  subscribeTimer() {\n    if (this.mineCount == 0) //Application startup\n    {\n      this.st.unsubscribe(this.timerID);\n      this.timerID = undefined;\n    }\n    else\n    {\n      this.stopTimer = false;\n      this.timerID = this.st.subscribe('Timer', () => this.updateTimer());\n    }\n  }\n\n  /**\n   * Iterates the timerCount, converts value to a digital clock format, updates digitalTimer.\n   *\n   * Pre: Timer has been subscribed.\n   *\n   * Post: timerCount has been iterated, digitalTimer correctly represents the time elapsed.\n   */\n  updateTimer()\n  {\n    if(!this.stopTimer) {\n      this.timerCount++;\n\n      /********* Update digital timer string **********/\n\n      this.digitalTimer = \"\"; // Reset value\n\n      // Initializations\n      let minutes = Math.floor(this.timerCount / 60);\n      let hours = Math.floor(minutes / 60);\n      if (hours > 0)\n      {\n        minutes = minutes - hours * 60;\n      }\n      let seconds = this.timerCount % 60;\n\n      // If time has exeeded 1 hour\n      if (hours != 0)\n      {\n        this.digitalTimer += hours + \":\"; //A dd hours\n\n        if (minutes  0 && !this.board.rows[row][col].isRevealed) { // place flag\n        this.playAudio(\"f\");\n        this.board.rows[row][col].isFlagged = true;\n        this.flagCount--;\n        if(this.board.rows[row][col].isBomb) {\n          this.flaggedMines++;\n        }\n        if(this.flaggedMines === this.mineCount) { // check for win\n          this.hasWon = true;\n          this.isGameOver = true;\n          this.board.isGameOver = true;\n          this.gameOverDialog();\n        }\n      }\n      else if (this.flagCount === 0 && !this.board.rows[row][col].isRevealed) {\n        alert(\"No flags remaining, remove a flag and try again.\");\n      }\n    }\n  }\n\n  /**\n   * Determines revealing behavior of a left-clicked tile.\n   *\n   * Pre: User left-clicks a tile and game is not over.\n   *\n   * Post: tile is revealed, game ends if it's a mine.\n   *\n   * @param row The row of the tile being flagged.\n   *\n   * @param col The column of the tile being flagged.\n   */\n  tileCheck(row: number, col: number) {\n\n    if(!this.isGameOver) {\n      if(this.board.rows[row][col].isBomb && (this.board.rows[row][col].cheatReveal==false)) { // bomb was clicked, end game\n        this.playAudio(\"b\");\n        this.board.revealMines();\n        this.isGameOver = true;\n        this.gameOverDialog();\n      }\n      else if (this.board.rows[row][col].cheatReveal)\n      {\n        alert(\"You cannot play while in cheat mode\");\n      }\n      else if(this.board.rows[row][col].isFlagged) { // flagged tile was clicked but wasn't a bomb\n        this.playAudio(\"c\");\n        this.board.rows[row][col].isFlagged = false;\n        this.board.rows[row][col].isRevealed = true;\n        this.flagCount++;\n        this.board.recursive_reveal(row, col);\n      }\n      else { // non-flag, non-bomb tile was clicked, reveal tile\n        this.playAudio(\"c\");\n        this.board.rows[row][col].isRevealed = true;\n        this.board.recursive_reveal(row, col);\n      }\n    }\n  }\n\n  /**\n   * Presents dialogue at the end of the game.\n   *\n   * Pre: Game has been completed.\n   *\n   * Post: Stops timer and lets user know if they won or lost.\n   */\n  gameOverDialog(): void {\n    this.stopTimer = true;\n    if (this.hasWon) {\n      setTimeout(() => alert(\"Congratulations! You win!\"), 500);\n    }\n    else {\n      setTimeout(() => alert(\"We all encounter failures in our lives.\"), 500);\n    }\n  }\n\n  /**\n   * Calls the cheat_reveal() function to start cheating.\n   *\n   * Pre: Game board is generated and game is active.\n   *\n   * Post: cheat_reveal() function has been called.\n   */\n  cheating(): void {\n    console.log(\"in Cheating\");\n    if (!this.board.isGameOver){\n      this.board.cheat_reveal();\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n    \n        Timer\n        \n    \n\n    \n    \n        Flags\n        \n    \n\n    \n        \n        \n            \n                \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                \n            \n        \n    \n    \n    Cheat Mode\n    \n    \n        Stats\n        Mines Flagged: {{flaggedMines}}\n        Time: {{digitalTimer}} \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Timer                            Flags                                                                                                                                                                                                                                                                                                                                                            Cheat Mode                Stats        Mines Flagged: {{flaggedMines}}        Time: {{digitalTimer}}     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentation/documentation.component.ts\n\n\n    \n        Description\n    \n    \n        Documentation Component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                styleUrls\n                documentation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/documentation/documentation.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/documentation/documentation.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Documentation Component\n*/\n@Component({\n  selector: 'app-documentation',\n  templateUrl: './documentation.component.html',\n  styleUrls: ['./documentation.component.css']\n})\nexport class DocumentationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n\n  \n\n    \n      Documentation\n      \n    \n\n    \n      Source Code\n      \n    \n\n  \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Documentation                    Source Code              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInputComponent.html":{"url":"components/UserInputComponent.html","title":"component - UserInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-input/user-input.component.ts\n\n\n    \n        Description\n    \n    \n        User Input Component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-input\n            \n\n            \n                styleUrls\n                user-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardFormGroup\n                            \n                            \n                                columnCount\n                            \n                            \n                                mineCount\n                            \n                            \n                                num\n                            \n                            \n                                rowCount\n                            \n                            \n                                showBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                newBoard\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-input/user-input.component.ts:19\n                            \n                        \n\n                \n                    \n                            Creates instance of the user input class\nPre: None.\nPost: Instance has been created.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Creates validators for the inputs that need to be checked.\nPre: None.\nPost: ColumnCount, RowCount, and MineCount validators are set.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newBoard\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewBoard()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Transfers all user inputs to the board.\nPre: Inputs have been validated.\nPost: Board now has correct column, row, and mine count.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateForm\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Validates user inputs and provides dialog feedback when the user does not pass correct input.\nCalls new board when input has been validated.\nPre: User has provided input.\nPost: newBoard is called after valid input.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boardFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        boardFormGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columnCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mineCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mineCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            num\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        num:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rowCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rowCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showBoard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showBoard:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/**\n* User Input Component\n*/\n@Component({\n  selector: 'app-user-input',\n  templateUrl: './user-input.component.html',\n  styleUrls: ['./user-input.component.css']\n})\nexport class UserInputComponent implements OnInit {\n\n  boardFormGroup: FormGroup;\n  columnCount: number = 0;\n  rowCount: number = 0;\n  mineCount: number = 0;\n  showBoard: boolean;\n  num: number = 0;\n\n  /**\n  * Creates instance of the user input class\n  *\n  * Pre: None.\n  *\n  * Post: Instance has been created.\n  */\n  constructor(private formBuilder: FormBuilder) {\n    this.boardFormGroup = this.formBuilder.group({});\n    this.showBoard = false;\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n   /**\n   * Creates validators for the inputs that need to be checked.\n   *\n   * Pre: None.\n   *\n   * Post: ColumnCount, RowCount, and MineCount validators are set.\n   */\n  createForm(): void {\n    this.boardFormGroup = this.formBuilder.group({\n      ColumnCount: ['', Validators.compose([Validators.min(2),Validators.max(30), Validators.required, Validators.pattern('^\\\\d+$')])],\n      RowCount: ['', Validators.compose([Validators.min(2),Validators.max(30), Validators.required, Validators.pattern('^\\\\d+$')])],\n      MineCount: ['', Validators.compose([Validators.min(1), Validators.required, Validators.pattern('^\\\\d+$')])],\n    });\n  }\n\n   /**\n   * Validates user inputs and provides dialog feedback when the user does not pass correct input.\n   * Calls new board when input has been validated.\n   *\n   * Pre: User has provided input.\n   *\n   * Post: newBoard is called after valid input.\n   */\n  validateForm(): void {\n    var numOfRows = this.boardFormGroup.value.RowCount;\n    var numOfColumns = this.boardFormGroup.value.ColumnCount;\n    var cellCount = numOfRows * numOfColumns;\n    var bombCount = this.boardFormGroup.value.MineCount;\n    var isValid = this.boardFormGroup.valid && bombCount = 2 && numOfColumns >= 2 && numOfRows = 1 && bombCount  2499)\n      {\n        alert('Cell count cannot exceed 2500');\n      }\n    }\n    else\n    {\n      this.newBoard();\n    }\n  }\n\n   /**\n   * Transfers all user inputs to the board.\n   *\n   * Pre: Inputs have been validated.\n   *\n   * Post: Board now has correct column, row, and mine count.\n   */\n  newBoard() {\n    this.columnCount = this.boardFormGroup.value.ColumnCount;\n    this.rowCount = this.boardFormGroup.value.RowCount;\n    this.mineCount= this.boardFormGroup.value.MineCount;\n    this.showBoard = true;\n    this.num = this.num + 1;\n  }\n}\n\n    \n\n    \n        \n\n\n\n  Minesweeper\n\n\n\n    \n      \n      \n        Columns\n        \n      \n\n      \n      \n        Rows\n        \n      \n\n      \n      \n        Mines\n        \n      \n    \n\n    \n    \n    New Game\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Minesweeper                        Columns                                  Rows                                  Mines                              New Game'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/board.html":{"url":"classes/board.html","title":"class - board","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  board\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/board.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                colCount\n                            \n                            \n                                    Public\n                                isGameOver\n                            \n                            \n                                    Public\n                                mineCount\n                            \n                            \n                                    Public\n                                rowCount\n                            \n                            \n                                    Public\n                                rows\n                            \n                            \n                                    Public\n                                tilesRevealed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bombCheck\n                            \n                            \n                                boundsCheck\n                            \n                            \n                                cheat_reveal\n                            \n                            \n                                placeMines\n                            \n                            \n                                placeNumber\n                            \n                            \n                                recursive_reveal\n                            \n                            \n                                revealMines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rows: number, cols: number, mines: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/board.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cols\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mines\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            colCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isGameOver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isGameOver:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mineCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mineCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rowCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rowCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rows:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tilesRevealed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tilesRevealed:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bombCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nbombCheck(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:151\n                            \n                        \n\n\n                \n                    \n                            For a given tile at coordinates (row, col), checks if the tile is a bomb.\nPre: There must be a board in existence.\nPost: Checks if there is a bomb at the given coordinate.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the coordinate to be checked.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the coordinate to be checked.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boundsCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nboundsCheck(row: , col: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:129\n                            \n                        \n\n\n                \n                    \n                            For a given tile at coordinates (row, col), checks if the tile is within the bounds of the board.\nPre: There must be a board in existence.\nPost: Returns true if the tile is within the bounds of the board, returns false otherwise.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the coordinate to be checked.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the coordinate to be checked.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cheat_reveal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheat_reveal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:315\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeMines\n                            \n                            \n                        \n                    \n                \n                \n                    \nplaceMines()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:42\n                            \n                        \n\n\n                \n                    \n                            Given the number of mines the user wanted, places mines at random coordinates.\nPre: There must be a board in existence.\nPost: Places the user-defined number of mines .\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nplaceNumber(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:70\n                            \n                        \n\n\n                \n                    \n                            Calculates what number to place in every tile, then places the correct number according to how many bombs are adjacent to that tile.\nPre: There must be a board in existence.\nPost: Calculates adjacent bombs to any given tile and places numbers accordingly.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the tile that was clicked.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the tile that was clicked.\nchanged it to work without being called from recursive_reveal.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recursive_reveal\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecursive_reveal(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:195\n                            \n                        \n\n\n                \n                    \n                            Clicking on a tile calls the recursive reveal function, the function then reveals tiles\nfanning out in every direction if they are empty or contain a number. Once the function\nreaches a numbered tile, the recursion stops.\nPre: There must be a board in existence.\nPost: When a tile is clicked, tiles fanning out from the clicked tile are revealed.\nIf the function hits a number in any direction, the revealing/recursion ceases.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the clicked tile.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the clicked tile.\nchanged it to not place the numbers on the reveal.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealMines\n                            \n                            \n                        \n                    \n                \n                \n                    \nrevealMines()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:168\n                            \n                        \n\n\n                \n                    \n                            After the user hits a bomb and the game ends, all of the mines are revealed.\nPre: There must be a board in existence.\nPost: If the user hits a bomb and ends the game, reveals all the mines.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { tile } from \"./tile\";\n\nexport class board\n{\n    public isGameOver: boolean;\n    public rows: any[];\n    public rowCount: number;\n    public colCount: number;\n    public mineCount: number;\n    public tilesRevealed: number;\n\n    constructor(rows: number, cols: number, mines: number) {\n        this.rowCount = rows;\n        this.colCount = cols;\n        this.mineCount = mines;\n        this.tilesRevealed = 0;\n        this.isGameOver = false;\n        this.rows = [];\n        for (let i = 0; i  event.preventDefault());\n    }\n\n    /**\n     * Given the number of mines the user wanted, places mines at random coordinates.\n     *\n     * Pre: There must be a board in existence.\n     *\n     * Post: Places the user-defined number of mines .\n     */\n    placeMines()\n    {\n      let mines_placed = 0;\n      while(mines_placed  this.rowCount-1 || col  this.colCount-1) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\n\n  /**\n   * For a given tile at coordinates (row, col), checks if the tile is a bomb.\n   *\n   * Pre: There must be a board in existence.\n   *\n   * Post: Checks if there is a bomb at the given coordinate.\n   *\n   * @param row The row of the coordinate to be checked.\n   *\n   * @param col The column of the coordinate to be checked.\n   */\n  bombCheck(row: number, col: number): boolean {\n    if (this.rows[row][col].isBomb) {\n      return true\n    }\n    else {\n      return false;\n    }\n  }\n\n\n  /**\n   * After the user hits a bomb and the game ends, all of the mines are revealed.\n   *\n   * Pre: There must be a board in existence.\n   *\n   * Post: If the user hits a bomb and ends the game, reveals all the mines.\n   */\n  revealMines() {\n      for(let i = 0; i  0) && !this.isGameOver)\n    {\n      if (this.boundsCheck(row - 1, col - 1)) { // top left tile\n        if (!this.rows[row - 1][col - 1].isBomb && !this.rows[row - 1][col - 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row - 1][col - 1].adjBombs > 0) {\n\n            this.rows[row - 1][col - 1].revealTile();\n          }\n          else {\n            this.rows[row - 1][col - 1].revealTile();\n            this.recursive_reveal(row - 1, col - 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row - 1, col)) { // top tile\n        if (!this.rows[row - 1][col].isBomb && !this.rows[row - 1][col].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row - 1][col].adjBombs > 0){\n\n            this.rows[row - 1][col].revealTile();\n\n\n          }\n          else{\n            this.rows[row - 1][col].revealTile();\n            this.recursive_reveal(row - 1, col);\n\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row - 1, col + 1)) { // top right tile\n        if (!this.rows[row - 1][col + 1].isBomb && !this.rows[row - 1][col + 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row - 1][col + 1].adjBombs > 0) {\n\n            this.rows[row - 1][col + 1].revealTile();\n          }\n          else {\n            this.rows[row - 1][col + 1].revealTile();\n            this.recursive_reveal(row - 1, col + 1);\n\n          }\n          this.tilesRevealed++;\n\n        }\n      }\n      if (this.boundsCheck(row, col - 1)) { // left tile\n        if (!this.rows[row][col - 1].isBomb && !this.rows[row][col - 1].isRevealed && !this.rows[row][col].isFlagged){\n          if (this.rows[row][col - 1].adjBombs > 0) {\n            this.rows[row][col - 1].revealTile();\n\n          }\n          else {\n            this.rows[row][col - 1].revealTile();\n            this.recursive_reveal(row, col - 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row, col + 1)) { // right tile\n        if (!this.rows[row][col + 1].isBomb && !this.rows[row][col + 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row][col + 1].adjBombs > 0) {\n            this.rows[row][col + 1].revealTile();\n          }\n          else {\n            this.rows[row][col + 1].revealTile();\n            this.recursive_reveal(row, col + 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n    if (this.boundsCheck(row + 1, col)) { // bottom tile\n      if (!this.rows[row + 1][col].isBomb && !this.rows[row + 1][col].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row + 1][col].adjBombs > 0) {\n            this.rows[row + 1][col].revealTile();\n          }\n          else {\n            this.rows[row + 1][col].revealTile();\n            this.recursive_reveal(row + 1, col);\n          }\n        this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row + 1, col - 1)) { // bottom left tile\n        if (!this.rows[row + 1][col - 1].isBomb && !this.rows[row + 1][col - 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row + 1][col - 1].adjBombs > 0) {\n\n            this.rows[row + 1][col - 1].revealTile();\n\n          }\n          else {\n            this.rows[row + 1][col - 1].revealTile();\n            this.recursive_reveal(row + 1, col - 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row + 1, col + 1)) { // bottom right tile\n        if (!this.rows[row + 1][col + 1].isBomb && !this.rows[row + 1][col + 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row + 1][col + 1].adjBombs > 0) {\n\n            this.rows[row + 1][col + 1].revealTile();\n\n          }\n          else {\n            this.rows[row + 1][col + 1].revealTile();\n            this.recursive_reveal(row + 1, col + 1);\n\n          }\n          this.tilesRevealed++;\n\n        }\n      }\n    }\n  }\n\n//does the cheating by calling the tiles cheatreveal fucntion on each tile.\ncheat_reveal() : void\n{\n  for(let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/board/board.component.ts\n            \n            \n                component\n            \n            \n                BoardComponent\n            \n            \n                40 %\n                (11/27)\n            \n        \n        \n            \n                \n                src/app/documentation/documentation.component.ts\n            \n            \n                component\n            \n            \n                DocumentationComponent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/models/board.ts\n            \n            \n                class\n            \n            \n                board\n            \n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                src/app/models/tile.ts\n            \n            \n                class\n            \n            \n                tile\n            \n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/app/user-input/user-input.component.ts\n            \n            \n                component\n            \n            \n                UserInputComponent\n            \n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @types/howler : ^2.0.5\n        \n            core-js : ^2.5.4\n        \n            ng2-simple-timer : ^6.0.0\n        \n            npm : ^6.4.1\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMinesweeper\nThis project was generated with Angular CLI version 6.1.5.\nDocumentation link: https://minesweeper-project.firebaseapp.com/assets/documentation/index.html\nMeeting Log\n8/31/2018\nIn class, all members present \nDecided on web based implementation, scheduled next meeting \n9/3/2018\nBlake and Bunty's house, all members present \nDecided on JavaScript, downloaded Visual Studio, and created \"Minesweeper\" repository. Each of us downloaded a clone of the repository gained collaborative access on GitHub. Downloaded Angular to make the web-app creation process easier. \n9/5/2018 \nIn class, all members present \nDiscussed the angular tutorial and what we should tackle later in tonight's meeting \n9/5/2018 \nBlake and Bunty's house, all members present \nDetermined group member roles/which component each member will work on, started working on heirarchy and necessary components \n9/6/2018 \nLEEP G415, all members present \nDiscussed how to pass information between components in angular, presented what we had gotten done since the last meeting \n9/7/2018 \nIn Class, all members present \nScheduled next meeting \n9/8/2018 \nBlake and Bunty's house, all members present \nDiscussed what we need to accomplish next,  ate pancakes, created Tile component \n9/10/2018 \nIn Class, Austin Wildman absent \nScheduled next meeting, discussed what we need to accomplish in later meeting \n9/10/2018 \nIn Lab, Blake Jordan absent \nFound a bug where several tables appear when \"New Game\" is clicked, fixed it \n9/10/2018 \nBlake and Bunty's house, Austin Wildman absent \nGot board to appear in the middle of the web page, modelled the tiles to look like minesweeper, added \"Game Over\" functionality when bomb was clicked, added flagging ability with right click \n9/13/2018 \nBlake and Bunty's house, all members present \nMade a To-Do list for wrapping up the project \n9/16/2018 \nBlake and Bunty's house, all members present \nFixed a few last minute bugs, finished documentation \nRetrospective Writeup\nHow was work split between teammates? \nWork was divided into the basic groups: Board Logic (Austin Wildman and McKenna Groves), Visuals (Bunty Dey and Seth Peterson), and Communication between components (Blake Jordan). Later on, after some work was done we split it into individual tasks such as writing specific functions, documentation of specific files, etc. \nWhat were the challenges and how were they overcome or dealt with? \nThe biggest challenge was learning TypeScript and HTML as well as the Angular Platform. That challenge was met with a lot of googling and good old trial and error. We also had some issues with GitHub and resolving merge conflicts. Sometimes if one person deleted something on their branch that had been previously pushed to master but was no longer needed, it would reappear on the master branch because there was confusion regarding whether or not it was needed. Also, one of our validators that stopped the board from crashing was accidentally deleted. \nDid any features not make the demo? \nYes, a max validator for the rows and colums input as well as an error message if the input contained decimals. They were coded and added to the master branch before the code freeze, but were accidentally removed in a merge conflict later on. We didn't notice what had happened until demo day. Our bad! \nIs there anything your team could have done differently? \nYes, during the beginning stages of the project, each of us did our own thing and there was no form or structure to our plan. Each member's roles were loosely defined which led to some overlap when it came to who was doing what. We discovered later on that it was much more helpful to tackle a particular problem together instead of each trying to tackle the problem separately, then just going with whatever worked first. Also, due to issues we encountered with some features being accidentally deleted, we will definitely add a last minute check to the list to make sure everything is working correctly BEFORE demo day.\nWorks Cited\nTimer\nhttps://www.npmjs.com/package/ng2-simple-timer\nDocumentation generator\nhttps://compodoc.github.io/compodoc/\nFavicon\nhttps://fontawesome.com/icons/bomb?style=solid\nDocumentation Link Icon\nhttps://fontawesome.com/v4.7.0/icon/book\nGithub Link Icon\nhttps://fontawesome.com/v4.7.0/icon/github\nFont\nhttps://fonts.google.com/specimen/Jura\nIcons\nUnclicked Tile - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/covered.png\nEmpty Tile - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/empty.png\nMine - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/mine.png\n1 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-1.png\n2 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-2.png\n3 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-3.png\n4 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-4.png\n5 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-5.png\n6 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-6.png\n7 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-7.png\n8 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-8.png\nInspiration\nhttp://www.simplygoodcode.com/2014/04/angularjs-game-programming-making-minesweeper-part-ii/index.html\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nUserInputComponent\n\nUserInputComponent\n\nAppModule -->\n\nUserInputComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/tile.html":{"url":"classes/tile.html","title":"class - tile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  tile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tile.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adjBombs\n                            \n                            \n                                cheatReveal\n                            \n                            \n                                col\n                            \n                            \n                                isBomb\n                            \n                            \n                                isFlagged\n                            \n                            \n                                isRevealed\n                            \n                            \n                                row\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cheatreveal\n                            \n                            \n                                flagTile\n                            \n                            \n                                revealTile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(row: number, col: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/tile.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        col\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adjBombs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adjBombs:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cheatReveal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cheatReveal:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            col\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        col:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBomb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isBomb:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFlagged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isFlagged:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRevealed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isRevealed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        row:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cheatreveal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheatreveal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/tile.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagTile\n                            \n                            \n                        \n                    \n                \n                \n                    \nflagTile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/tile.ts:53\n                            \n                        \n\n\n                \n                    \n                            Flags the clicked(right click) on tile and updates the tile's image.\nPre: There must be a board in existence.\nPost: Changes member variables and the image of the tile.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealTile\n                            \n                            \n                        \n                    \n                \n                \n                    \nrevealTile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/tile.ts:40\n                            \n                        \n\n\n                \n                    \n                            Reveals the clicked on tile and updates the tile's member variables and image.\nPre: There must be a board in existence.\nPost: Reveals the tile if it is not already revealed, changes member variables accordingly.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class tile {\n    isRevealed: boolean;\n    isBomb: boolean;\n    isFlagged: boolean;\n    adjBombs: number;\n    row: number;\n    col: number;\n    cheatReveal: boolean;\n\n\n    constructor(row: number, col: number) {\n        this.isRevealed = false;\n        this.isBomb = false;\n        this.isFlagged = false;\n        this.row = row;\n        this.col = col;\n        this.adjBombs = 0;\n        this.cheatReveal = false; //added variable to make it reveal when the true\n    }\n\n    // Sets the boards cheat reveal vaiable to true and false.\n    cheatreveal()\n    { console.log(this.cheatReveal);\n      if(!this.cheatReveal)\n      {\n        this.cheatReveal = true;\n      }\n      else\n      {\n        this.cheatReveal = false;\n      }\n    }\n    /**\n     * Reveals the clicked on tile and updates the tile's member variables and image.\n     *\n     * Pre: There must be a board in existence.\n     *\n     * Post: Reveals the tile if it is not already revealed, changes member variables accordingly.\n     */\n    revealTile() {\n        if (this.isRevealed === false && !this.isFlagged){\n            this.isRevealed = true;\n        }\n    }\n\n    /**\n     * Flags the clicked(right click) on tile and updates the tile's image.\n     *\n     * Pre: There must be a board in existence.\n     *\n     * Post: Changes member variables and the image of the tile.\n     */\n    flagTile(){\n        if(this.isFlagged === false){\n            this.isFlagged = true;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
