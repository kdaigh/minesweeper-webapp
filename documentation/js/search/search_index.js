var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.205,1,0.521]],["body/components/AppComponent.html",[0,0.401,1,0.964,2,0.883,3,0.883,4,1.606,5,1.606,6,1.606,7,0.549,8,2.438,9,1.322,10,1.922,11,1.606,12,2.286,13,3.847,14,1.955,15,3.847,16,1.955,17,3.847,18,1.086,19,0.077,20,1.086,21,0.706,22,0.16,23,1.086,24,1.609,25,1.955,26,1.609,27,2.193,28,1.606,29,1.321,30,1.606,31,0.706,32,1.606,33,0.706,34,1.606,35,0.706,36,1.086,37,1.322,38,1.606,39,0.063,40,0.063]],["title/modules/AppModule.html",[41,0.976,42,1.185]],["body/modules/AppModule.html",[1,1.039,2,0.818,3,0.818,7,0.508,18,1.569,19,0.078,20,1.005,21,0.819,22,0.148,23,1.005,31,0.986,33,0.986,35,0.986,36,1.005,39,0.06,40,0.06,41,1.534,42,2.373,43,1.487,44,3.09,45,3.09,46,1.864,47,2.257,48,2.257,49,2.257,50,2.829,51,1.816,52,1.816,53,2.926,54,3.668,55,2.257,56,1.816,57,3.668,58,2.926,59,1.816,60,2.926,61,3.668,62,3.668,63,1.816,64,3.668,65,2.257,66,2.926,67,2.926]],["title/components/BoardComponent.html",[0,0.205,31,0.521]],["body/components/BoardComponent.html",[0,0.308,1,0.237,2,0.297,3,0.297,4,0.539,5,0.539,6,0.539,7,0.184,9,0.73,10,1.281,11,0.539,12,1.556,14,0.887,16,0.887,18,0.885,19,0.079,20,0.365,21,0.237,22,0.089,23,0.365,24,0.73,25,0.887,26,0.73,27,1.309,28,0.539,29,1.052,30,0.539,31,0.576,32,0.539,33,0.237,34,0.539,35,0.237,36,1.238,37,1.508,38,0.539,39,0.028,40,0.028,46,0.887,51,1.9,68,0.819,69,1.153,70,0.887,71,2.224,72,1.746,73,1.746,74,0.297,75,1.556,76,1.715,77,3.605,78,3.236,79,3.605,80,3.38,81,2.607,82,2.576,83,2.576,84,3.062,85,3.773,86,2.576,87,0.73,88,2.238,89,1.746,90,2.576,91,3.38,92,2.576,93,1.746,94,3.062,95,2.576,96,1.746,97,2.576,98,1.715,99,1.38,100,1.715,101,1.38,102,0.444,103,1.062,104,2.847,105,1.481,106,1.746,107,3.38,108,0.73,109,2.7,110,2.576,111,2.224,112,2.113,113,1.347,114,2.113,115,1.38,116,2.576,117,1.309,118,1.391,119,1.309,120,1.746,121,2.201,122,1.062,123,1.062,124,1.062,125,1.062,126,1.062,127,2.342,128,1.987,129,1.767,130,1.599,131,1.764,132,1.13,133,1.746,134,1.508,135,1.578,136,1.062,137,2.098,138,1.062,139,0.887,140,1.062,141,1.359,142,1.715,143,2.513,144,1.062,145,1.347,146,0.819,147,0.659,148,1.062,149,1.062,150,1.062,151,0.819,152,1.746,153,1.191,154,1.062,155,1.347,156,1.746,157,2.196,158,1.746,159,1.084,160,1.746,161,1.746,162,1.746,163,1.746,164,1.062,165,1.644,166,1.084,167,1.746,168,1.062,169,1.084,170,1.347,171,1.832,172,2.847,173,1.062,174,3.502,175,1.062,176,1.746,177,1.062,178,0.659,179,0.659,180,1.062,181,1.062,182,3.695,183,1.062,184,2.576,185,2.847,186,2.847,187,1.987,188,1.746,189,1.062,190,1.347,191,1.767,192,1.746,193,1.987,194,1.084,195,1.746,196,1.309,197,1.599,198,1.084,199,1.062,200,2.576,201,1.746,202,1.599,203,2.224,204,1.746,205,1.746,206,1.715,207,1.347,208,1.746,209,3.062,210,2.224,211,1.062,212,1.062,213,1.062,214,1.779,215,1.062,216,1.062,217,0.659,218,1.508,219,1.062,220,1.062,221,1.062,222,1.062,223,1.062,224,0.819,225,1.062,226,1.062,227,1.746,228,1.715,229,0.819,230,0.819,231,1.062,232,0.819,233,2.576,234,2.576,235,1.987,236,2.224,237,1.465,238,1.062,239,2.576,240,1.599,241,1.062,242,1.062,243,1.062,244,1.062,245,0.819,246,2.224,247,2.224,248,1.746,249,1.062,250,0.73,251,1.062,252,1.062,253,1.062,254,1.062,255,1.062,256,1.746,257,1.987,258,1.062,259,2.576,260,3.236,261,1.062,262,1.062,263,1.062,264,1.062,265,2.576,266,1.062,267,1.746,268,1.414,269,1.746,270,1.062,271,1.746,272,1.746,273,1.062,274,0.819,275,0.819,276,1.062,277,1.062,278,1.062,279,1.38,280,1.062,281,1.062,282,1.062,283,1.062,284,2.224,285,1.062,286,1.062,287,1.746,288,1.746,289,1.746,290,1.746,291,1.062,292,1.746,293,1.062,294,0.819,295,1.062,296,1.062,297,1.062,298,1.062,299,1.746]],["title/components/DocumentationComponent.html",[0,0.205,33,0.521]],["body/components/DocumentationComponent.html",[0,0.396,1,0.665,2,0.832,3,1.128,4,1.512,5,1.512,6,1.512,7,0.517,9,1.245,10,1.854,11,1.512,12,2.253,14,1.884,16,1.884,18,1.022,19,0.078,20,1.022,21,0.665,22,0.151,23,1.022,24,1.551,25,1.884,26,1.551,27,2.147,28,1.512,29,1.273,30,1.512,31,0.665,32,1.512,33,0.944,34,1.512,35,0.665,36,1.022,37,1.245,38,1.512,39,0.06,40,0.06,70,1.884,74,0.832,87,1.551,102,1.689,105,1.273,134,1.245,135,1.245,300,2.296,301,2.751,302,3.114,303,3.707,304,3.707,305,3.26,306,2.976,307,2.976,308,2.859]],["title/components/UserInputComponent.html",[0,0.205,35,0.521]],["body/components/UserInputComponent.html",[0,0.342,1,0.385,2,0.482,3,0.482,4,0.876,5,0.876,6,0.876,7,0.299,9,0.721,10,1.571,11,0.876,12,1.908,14,1.297,16,1.297,18,0.877,19,0.079,20,0.592,21,0.385,22,0.154,23,0.592,24,1.067,25,1.297,26,1.067,27,2.071,28,0.876,29,1.044,30,0.876,31,0.385,32,0.876,33,0.385,34,0.876,35,0.75,36,1.538,37,1.902,38,0.876,39,0.042,40,0.042,46,1.707,59,2.642,63,1.07,69,1.049,70,1.297,74,0.482,75,1.297,87,1.067,98,2.997,99,2.412,100,2.591,101,2.412,102,0.721,105,1.445,112,2.028,113,2.591,114,2.028,117,0.876,118,1.335,119,0.876,121,2.163,127,2.085,131,1.067,134,1.405,135,1.626,139,1.297,145,2.344,153,1.405,165,1.707,169,2.67,179,1.584,196,1.707,198,2.085,202,2.085,214,1.544,217,2.085,218,0.721,232,1.329,237,1.669,240,1.07,245,1.329,250,1.067,268,0.721,302,2.344,305,2.591,309,3.284,310,1.329,311,2.552,312,2.552,313,3.359,314,3.359,315,3.359,316,3.755,317,3.359,318,1.723,319,3.755,320,2.552,321,2.896,322,3.359,323,1.723,324,1.968,325,1.723,326,2.552,327,2.552,328,2.591,329,1.723,330,1.723,331,2.552,332,2.552,333,1.968,334,3.359,335,1.723,336,1.723,337,1.723,338,1.723,339,1.723,340,2.552,341,2.552,342,2.552,343,1.723,344,2.552,345,3.039,346,3.039,347,1.723,348,3.039,349,2.552,350,3.039,351,2.552,352,1.723,353,3.039,354,2.552,355,1.723,356,1.723,357,1.584,358,1.723,359,1.723,360,1.723,361,1.723,362,1.723,363,1.329,364,2.552,365,1.968]],["title/classes/board.html",[22,0.118,69,0.652]],["body/classes/board.html",[2,0.338,3,0.338,7,0.21,9,1.165,18,0.416,19,0.079,21,0.27,22,0.099,26,0.812,29,1.047,36,1.221,39,0.032,40,0.032,52,1.205,69,1.164,74,0.338,75,0.987,76,3.239,81,2.147,87,0.812,88,1.205,99,1.728,101,1.728,102,0.506,105,1.417,112,1.954,114,1.954,117,1.549,118,1.292,119,1.549,121,2.341,127,1.728,128,2.147,129,2.02,131,1.361,132,0.987,134,1.664,135,1.361,137,2.798,139,1.954,141,1.562,142,2.741,147,2.276,153,1.77,157,2.147,159,0.751,166,1.205,171,1.737,178,1.205,187,0.933,191,2.43,193,1.876,196,2.096,197,0.751,198,1.892,214,1.654,218,1.165,228,1.498,230,1.498,235,1.498,237,1.687,240,0.751,250,1.839,268,1.018,279,2.335,328,0.933,363,1.498,366,0.933,367,2.784,368,2.784,369,1.942,370,1.942,371,2.784,372,1.942,373,2.433,374,2.784,375,1.498,376,1.942,377,1.21,378,1.21,379,1.21,380,1.21,381,1.21,382,1.942,383,1.21,384,3.554,385,3.978,386,1.21,387,1.21,388,1.942,389,1.942,390,1.21,391,1.942,392,1.942,393,1.498,394,2.147,395,2.784,396,1.942,397,1.942,398,1.942,399,1.942,400,1.21,401,1.942,402,1.942,403,1.21,404,1.21,405,1.942,406,1.21,407,1.21,408,1.942,409,0.933,410,0.933,411,1.21,412,1.21,413,1.21,414,1.942,415,1.942,416,0.933,417,0.933,418,1.21,419,1.21,420,3.048,421,1.21,422,1.21,423,1.21,424,1.942,425,3.667,426,0.933,427,1.21,428,1.21,429,1.21,430,1.21,431,1.942,432,3.554,433,2.433,434,4.459,435,4.262,436,3.254,437,3.254,438,3.554,439,3.254,440,3.915,441,3.554,442,1.942,443,1.942,444,1.942,445,2.784,446,1.876,447,3.763,448,2.433]],["title/coverage.html",[449,2.44]],["body/coverage.html",[0,0.386,1,0.74,7,0.575,8,2.554,19,0.076,22,0.201,31,0.74,33,0.74,35,0.74,39,0.064,40,0.064,59,2.055,68,2.554,69,0.925,108,1.655,118,1.137,141,1.137,165,1.683,237,1.655,300,2.554,301,2.055,309,2.554,310,2.554,366,2.554,449,2.554,450,3.311,451,3.311,452,3.311,453,3.311,454,3.311,455,3.311,456,3.311,457,3.311,458,3.311,459,3.311,460,2.554,461,3.311,462,3.311,463,3.311,464,3.311,465,2.554,466,3.052,467,3.956,468,2.554,469,3.311,470,2.554]],["title/dependencies.html",[43,1.423,471,1.957]],["body/dependencies.html",[19,0.078,20,1.14,39,0.064,40,0.064,43,1.686,55,3.055,56,2.458,63,2.059,65,2.559,109,2.059,115,2.059,224,2.559,472,3.318,473,4.665,474,3.318,475,3.961,476,3.318,477,3.318,478,3.318,479,3.318,480,3.318,481,3.318,482,3.318,483,3.318,484,3.318,485,3.318,486,3.961,487,3.318,488,3.318,489,3.318,490,3.318,491,3.318]],["title/index.html",[74,0.547,130,1.215,492,1.957]],["body/index.html",[0,0.321,7,0.311,10,0.75,19,0.043,22,0.174,24,0.75,37,1.099,39,0.043,40,0.043,69,0.869,70,0.911,105,0.616,109,1.631,115,1.113,129,1.631,130,1.113,131,1.301,132,1.335,139,0.911,141,1.176,143,1.113,146,1.383,151,1.383,153,0.75,155,3.228,159,1.113,165,0.911,169,1.631,170,1.383,171,1.58,178,1.113,179,2.125,190,1.383,194,1.113,196,0.911,197,1.113,207,1.383,229,2.811,250,0.75,257,2.026,274,1.383,275,1.383,279,1.113,294,1.383,301,2.262,308,2.026,321,2.026,333,1.383,357,1.113,365,3.396,394,2.811,410,3.113,416,1.383,417,1.383,446,1.383,470,1.383,493,3.109,494,1.793,495,1.793,496,1.793,497,3.109,498,1.793,499,1.793,500,3.935,501,1.793,502,1.793,503,3.272,504,2.627,505,3.109,506,1.793,507,3.109,508,3.424,509,1.793,510,4.036,511,3.809,512,3.809,513,1.793,514,3.109,515,2.627,516,1.793,517,2.627,518,1.793,519,1.793,520,1.793,521,1.793,522,3.109,523,2.641,524,1.793,525,1.793,526,1.793,527,2.627,528,3.424,529,1.793,530,3.109,531,3.645,532,1.793,533,2.627,534,1.793,535,1.793,536,1.793,537,1.793,538,1.793,539,3.109,540,1.793,541,3.109,542,3.109,543,1.793,544,1.793,545,2.627,546,1.793,547,1.793,548,3.109,549,3.109,550,3.109,551,3.109,552,1.793,553,2.627,554,1.793,555,2.627,556,1.793,557,2.627,558,2.627,559,1.793,560,1.793,561,1.793,562,1.793,563,2.398,564,1.793,565,1.793,566,1.793,567,2.627,568,1.793,569,1.793,570,1.793,571,1.793,572,1.793,573,2.627,574,1.793,575,1.793,576,1.793,577,1.793,578,1.793,579,1.793,580,1.793,581,1.793,582,1.793,583,1.793,584,1.793,585,1.793,586,1.793,587,1.793,588,1.793,589,2.627,590,1.793,591,3.109,592,1.793,593,1.793,594,1.793,595,1.793,596,1.793,597,2.627,598,1.793,599,1.793,600,1.793,601,1.793,602,1.793,603,1.793,604,1.793,605,2.627,606,2.627,607,1.793,608,2.627,609,2.627,610,1.793,611,2.627,612,1.793,613,3.109,614,1.793,615,3.109,616,1.793,617,1.793,618,3.109,619,1.793,620,1.793,621,1.793,622,1.793,623,1.793,624,1.793,625,3.109,626,2.627,627,3.109,628,2.627,629,1.793,630,1.793,631,1.793,632,1.793,633,2.627,634,1.793,635,1.793,636,1.793,637,1.793,638,1.793,639,2.627,640,1.793,641,1.793,642,1.793,643,1.793,644,1.793,645,1.793,646,1.793,647,1.793,648,1.793,649,1.793,650,1.793,651,1.793,652,1.793,653,1.793,654,1.793,655,1.793,656,1.793,657,1.793,658,1.793,659,1.793,660,1.793,661,1.793,662,1.793,663,2.627,664,1.793,665,1.793,666,1.793,667,1.793,668,1.793,669,1.793,670,1.793,671,1.793,672,1.793,673,1.793,674,1.793,675,1.793,676,1.793,677,1.793,678,1.793,679,1.793,680,3.109,681,1.793,682,1.793,683,1.793,684,1.793,685,1.793,686,4.242,687,4.242,688,4.242,689,4.242,690,1.793,691,1.793,692,1.793,693,4.036,694,1.793,695,1.793,696,1.793,697,1.793,698,1.383,699,1.793,700,1.793,701,1.793,702,1.793,703,1.793,704,1.793,705,1.793,706,1.793,707,1.793,708,1.793,709,1.793,710,1.793,711,1.793,712,1.793]],["title/modules.html",[41,1.323]],["body/modules.html",[19,0.069,39,0.069,40,0.069,41,1.541,42,1.872,56,2.286,713,3.684,714,3.684,715,3.684]],["title/overview.html",[716,2.44]],["body/overview.html",[0,0.295,1,1.029,19,0.075,21,0.748,22,0.17,23,1.151,31,0.95,33,0.95,35,0.95,39,0.065,40,0.065,41,1.666,42,2.395,43,1.702,44,2.584,45,2.584,46,1.702,47,2.584,48,2.584,49,2.584,50,3.073,51,2.079,52,2.079,250,1.401,357,2.079,698,2.584,716,2.584]],["title/classes/tile.html",[22,0.118,141,0.801]],["body/classes/tile.html",[2,0.61,3,0.61,7,0.379,19,0.078,21,0.488,22,0.153,29,0.75,39,0.049,40,0.049,69,1.187,74,0.61,75,1.536,87,1.264,88,1.876,102,0.913,105,1.516,108,1.805,112,2.066,114,2.066,117,1.109,118,1.46,119,1.109,121,2.305,131,1.264,132,1.536,134,1.451,135,1.451,137,2.637,141,1.5,143,1.876,147,2.323,153,1.701,166,2.323,171,1.902,191,2.678,194,1.876,206,2.887,214,2.261,218,1.846,237,0.913,268,1.777,324,2.887,375,2.332,393,3.369,409,2.332,426,1.684,460,1.684,503,3.136,523,1.684,563,1.684,717,3.743,718,3.743,719,3.743,720,3.743,721,3.743,722,3.743,723,3.023,724,2.183,725,2.183,726,2.183,727,2.183,728,2.183,729,2.183,730,2.183,731,3.023,732,2.183,733,3.023,734,3.743,735,4.066,736,2.183,737,3.023,738,3.468,739,2.183,740,3.468,741,2.183,742,2.183,743,3.468,744,2.183,745,2.183,746,2.183]],["title/miscellaneous/variables.html",[108,1.171,747,1.51]],["body/miscellaneous/variables.html",[19,0.077,39,0.066,40,0.066,74,0.97,108,1.452,118,1.397,202,2.525,217,2.525,218,1.452,268,1.452,465,2.676,466,3.544,468,2.676,747,2.676,748,3.47,749,3.47,750,4.451,751,4.068]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":237,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"classes/tile.html":{}}}],["0.8.26",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":250,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{},"overview.html":{}}}],["1.png",{"_index":694,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["12/27",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["1].adjbomb",{"_index":439,"title":{},"body":{"classes/board.html":{}}}],["1].isbomb",{"_index":436,"title":{},"body":{"classes/board.html":{}}}],["1].isrev",{"_index":437,"title":{},"body":{"classes/board.html":{}}}],["1].revealtil",{"_index":440,"title":{},"body":{"classes/board.html":{}}}],["1][col",{"_index":435,"title":{},"body":{"classes/board.html":{}}}],["1][col].adjbomb",{"_index":444,"title":{},"body":{"classes/board.html":{}}}],["1][col].isbomb",{"_index":442,"title":{},"body":{"classes/board.html":{}}}],["1][col].isrev",{"_index":443,"title":{},"body":{"classes/board.html":{}}}],["1][col].revealtil",{"_index":445,"title":{},"body":{"classes/board.html":{}}}],["2",{"_index":357,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{},"overview.html":{}}}],["2.0.5",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["2.amazonaws.com/angularj",{"_index":689,"title":{},"body":{"index.html":{}}}],["2.png",{"_index":695,"title":{},"body":{"index.html":{}}}],["2499",{"_index":358,"title":{},"body":{"components/UserInputComponent.html":{}}}],["25",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["2500",{"_index":361,"title":{},"body":{"components/UserInputComponent.html":{}}}],["3",{"_index":696,"title":{},"body":{"index.html":{}}}],["3.png",{"_index":697,"title":{},"body":{"index.html":{}}}],["3/12",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":698,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.png",{"_index":699,"title":{},"body":{"index.html":{}}}],["41",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":700,"title":{},"body":{"index.html":{}}}],["5.png",{"_index":701,"title":{},"body":{"index.html":{}}}],["5/12",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":292,"title":{},"body":{"components/BoardComponent.html":{}}}],["6",{"_index":702,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":496,"title":{},"body":{"index.html":{}}}],["6.4.1",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["6.png",{"_index":703,"title":{},"body":{"index.html":{}}}],["60",{"_index":259,"title":{},"body":{"components/BoardComponent.html":{}}}],["7",{"_index":704,"title":{},"body":{"index.html":{}}}],["7.png",{"_index":705,"title":{},"body":{"index.html":{}}}],["7/15",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":706,"title":{},"body":{"index.html":{}}}],["8.png",{"_index":707,"title":{},"body":{"index.html":{}}}],["8/31/2018",{"_index":502,"title":{},"body":{"index.html":{}}}],["9/10/2018",{"_index":548,"title":{},"body":{"index.html":{}}}],["9/13/2018",{"_index":565,"title":{},"body":{"index.html":{}}}],["9/16/2018",{"_index":569,"title":{},"body":{"index.html":{}}}],["9/3/2018",{"_index":509,"title":{},"body":{"index.html":{}}}],["9/5/2018",{"_index":527,"title":{},"body":{"index.html":{}}}],["9/6/2018",{"_index":536,"title":{},"body":{"index.html":{}}}],["9/7/2018",{"_index":543,"title":{},"body":{"index.html":{}}}],["9/8/2018",{"_index":544,"title":{},"body":{"index.html":{}}}],["abil",{"_index":564,"title":{},"body":{"index.html":{}}}],["absent",{"_index":551,"title":{},"body":{"index.html":{}}}],["access",{"_index":521,"title":{},"body":{"index.html":{}}}],["accident",{"_index":625,"title":{},"body":{"index.html":{}}}],["accomplish",{"_index":545,"title":{},"body":{"index.html":{}}}],["accord",{"_index":406,"title":{},"body":{"classes/board.html":{}}}],["accordingli",{"_index":409,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["activ",{"_index":133,"title":{},"body":{"components/BoardComponent.html":{}}}],["actual_compon",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["ad",{"_index":563,"title":{},"body":{"index.html":{},"classes/tile.html":{}}}],["add",{"_index":672,"title":{},"body":{"index.html":{}}}],["adjac",{"_index":408,"title":{},"body":{"classes/board.html":{}}}],["adjbomb",{"_index":717,"title":{},"body":{"classes/tile.html":{}}}],["adjust",{"_index":144,"title":{},"body":{"components/BoardComponent.html":{}}}],["again",{"_index":276,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert",{"_index":149,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"congratul",{"_index":291,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"no",{"_index":273,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"w",{"_index":293,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"y",{"_index":283,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert('cel",{"_index":359,"title":{},"body":{"components/UserInputComponent.html":{}}}],["allow",{"_index":148,"title":{},"body":{"components/BoardComponent.html":{}}}],["alreadi",{"_index":737,"title":{},"body":{"classes/tile.html":{}}}],["angular",{"_index":229,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"components/UserInputComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["anyth",{"_index":641,"title":{},"body":{"index.html":{}}}],["app",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"index.html":{}}}],["app.compon",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":557,"title":{},"body":{"index.html":{}}}],["applic",{"_index":185,"title":{},"body":{"components/BoardComponent.html":{}}}],["appmodul",{"_index":42,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["at",{"_index":546,"title":{},"body":{"index.html":{}}}],["audio",{"_index":176,"title":{},"body":{"components/BoardComponent.html":{}}}],["austin",{"_index":549,"title":{},"body":{"index.html":{}}}],["bad",{"_index":640,"title":{},"body":{"index.html":{}}}],["base",{"_index":506,"title":{},"body":{"index.html":{}}}],["basic",{"_index":576,"title":{},"body":{"index.html":{}}}],["be",{"_index":197,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"index.html":{}}}],["befor",{"_index":633,"title":{},"body":{"index.html":{}}}],["begin",{"_index":645,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":192,"title":{},"body":{"components/BoardComponent.html":{}}}],["between",{"_index":539,"title":{},"body":{"index.html":{}}}],["biggest",{"_index":594,"title":{},"body":{"index.html":{}}}],["blake",{"_index":510,"title":{},"body":{"index.html":{}}}],["board",{"_index":69,"title":{"classes/board.html":{}},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"index.html":{},"classes/tile.html":{}}}],["board'},{'nam",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["board(this.rowcount",{"_index":244,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.css",{"_index":72,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":73,"title":{},"body":{"components/BoardComponent.html":{}}}],["board/board.compon",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["boardcompon",{"_index":31,"title":{"components/BoardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boardformgroup",{"_index":313,"title":{},"body":{"components/UserInputComponent.html":{}}}],["bomb",{"_index":279,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"index.html":{}}}],["bombcheck",{"_index":369,"title":{},"body":{"classes/board.html":{}}}],["bombcheck(row",{"_index":382,"title":{},"body":{"classes/board.html":{}}}],["bombcount",{"_index":353,"title":{},"body":{"components/UserInputComponent.html":{}}}],["boolean",{"_index":214,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["bootstrap",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bottom",{"_index":448,"title":{},"body":{"classes/board.html":{}}}],["bound",{"_index":389,"title":{},"body":{"classes/board.html":{}}}],["boundscheck",{"_index":370,"title":{},"body":{"classes/board.html":{}}}],["boundscheck(row",{"_index":386,"title":{},"body":{"classes/board.html":{}}}],["branch",{"_index":615,"title":{},"body":{"index.html":{}}}],["brows",{"_index":715,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":555,"title":{},"body":{"index.html":{}}}],["bunti",{"_index":580,"title":{},"body":{"index.html":{}}}],["bunty'",{"_index":511,"title":{},"body":{"index.html":{}}}],["button",{"_index":396,"title":{},"body":{"classes/board.html":{}}}],["calcul",{"_index":405,"title":{},"body":{"classes/board.html":{}}}],["call",{"_index":127,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["came",{"_index":656,"title":{},"body":{"index.html":{}}}],["ceas",{"_index":422,"title":{},"body":{"classes/board.html":{}}}],["cellcount",{"_index":352,"title":{},"body":{"components/UserInputComponent.html":{}}}],["challeng",{"_index":591,"title":{},"body":{"index.html":{}}}],["chang",{"_index":166,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["cheat",{"_index":88,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["cheat_rev",{"_index":128,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["cheatrev",{"_index":393,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["check",{"_index":139,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{}}}],["cite",{"_index":675,"title":{},"body":{"index.html":{}}}],["class",{"_index":22,"title":{"classes/board.html":{},"classes/tile.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"classes/tile.html":{}}}],["cli",{"_index":494,"title":{},"body":{"index.html":{}}}],["click",{"_index":171,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"index.html":{},"classes/tile.html":{}}}],["clicked(right",{"_index":733,"title":{},"body":{"classes/tile.html":{}}}],["clock",{"_index":204,"title":{},"body":{"components/BoardComponent.html":{}}}],["clone",{"_index":518,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":308,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["col",{"_index":137,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["colcount",{"_index":367,"title":{},"body":{"classes/board.html":{}}}],["collabor",{"_index":520,"title":{},"body":{"index.html":{}}}],["colum",{"_index":630,"title":{},"body":{"index.html":{}}}],["column",{"_index":198,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["columncount",{"_index":98,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["commun",{"_index":584,"title":{},"body":{"index.html":{}}}],["complet",{"_index":158,"title":{},"body":{"components/BoardComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["condit",{"_index":111,"title":{},"body":{"components/BoardComponent.html":{}}}],["conflict",{"_index":609,"title":{},"body":{"index.html":{}}}],["confus",{"_index":621,"title":{},"body":{"index.html":{}}}],["console.log(\"in",{"_index":297,"title":{},"body":{"components/BoardComponent.html":{}}}],["console.log(this.cheatrev",{"_index":744,"title":{},"body":{"classes/tile.html":{}}}],["constructor",{"_index":102,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["constructor(formbuild",{"_index":318,"title":{},"body":{"components/UserInputComponent.html":{}}}],["constructor(priv",{"_index":232,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["constructor(row",{"_index":375,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["constructor(st",{"_index":103,"title":{},"body":{"components/BoardComponent.html":{}}}],["contain",{"_index":417,"title":{},"body":{"classes/board.html":{},"index.html":{}}}],["convert",{"_index":201,"title":{},"body":{"components/BoardComponent.html":{}}}],["coordin",{"_index":385,"title":{},"body":{"classes/board.html":{}}}],["core",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":328,"title":{},"body":{"components/UserInputComponent.html":{},"classes/board.html":{}}}],["correctli",{"_index":207,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["count",{"_index":145,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["coverag",{"_index":449,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crash",{"_index":624,"title":{},"body":{"index.html":{}}}],["creat",{"_index":321,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{}}}],["createform",{"_index":315,"title":{},"body":{"components/UserInputComponent.html":{}}}],["creation",{"_index":524,"title":{},"body":{"index.html":{}}}],["current",{"_index":140,"title":{},"body":{"components/BoardComponent.html":{}}}],["day",{"_index":639,"title":{},"body":{"index.html":{}}}],["dd",{"_index":264,"title":{},"body":{"components/BoardComponent.html":{}}}],["dealt",{"_index":593,"title":{},"body":{"index.html":{}}}],["decid",{"_index":504,"title":{},"body":{"index.html":{}}}],["decim",{"_index":632,"title":{},"body":{"index.html":{}}}],["declar",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":217,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":105,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{},"classes/tile.html":{}}}],["definit",{"_index":671,"title":{},"body":{"index.html":{}}}],["delet",{"_index":613,"title":{},"body":{"index.html":{}}}],["demo",{"_index":627,"title":{},"body":{"index.html":{}}}],["depend",{"_index":43,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["determin",{"_index":190,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["dey",{"_index":581,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":331,"title":{},"body":{"components/UserInputComponent.html":{}}}],["dialogu",{"_index":156,"title":{},"body":{"components/BoardComponent.html":{}}}],["didn't",{"_index":635,"title":{},"body":{"index.html":{}}}],["differ",{"_index":643,"title":{},"body":{"index.html":{}}}],["digit",{"_index":203,"title":{},"body":{"components/BoardComponent.html":{}}}],["digitaltim",{"_index":77,"title":{},"body":{"components/BoardComponent.html":{}}}],["direct",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["discov",{"_index":658,"title":{},"body":{"index.html":{}}}],["discuss",{"_index":528,"title":{},"body":{"index.html":{}}}],["display",{"_index":231,"title":{},"body":{"components/BoardComponent.html":{}}}],["divid",{"_index":575,"title":{},"body":{"index.html":{}}}],["do",{"_index":657,"title":{},"body":{"index.html":{}}}],["document",{"_index":301,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{},"index.html":{}}}],["documentation'},{'nam",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["documentation.component.css",{"_index":303,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.html",{"_index":304,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation/documentation.compon",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["documentationcompon",{"_index":33,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["done",{"_index":541,"title":{},"body":{"index.html":{}}}],["download",{"_index":514,"title":{},"body":{"index.html":{}}}],["due",{"_index":670,"title":{},"body":{"index.html":{}}}],["dure",{"_index":644,"title":{},"body":{"index.html":{}}}],["dynam",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":394,"title":{},"body":{"classes/board.html":{},"index.html":{}}}],["easier",{"_index":526,"title":{},"body":{"index.html":{}}}],["elaps",{"_index":210,"title":{},"body":{"components/BoardComponent.html":{}}}],["element",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["empti",{"_index":416,"title":{},"body":{"classes/board.html":{},"index.html":{}}}],["encount",{"_index":294,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["end",{"_index":157,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["environ",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":605,"title":{},"body":{"index.html":{}}}],["etc",{"_index":590,"title":{},"body":{"index.html":{}}}],["event.preventdefault",{"_index":427,"title":{},"body":{"classes/board.html":{}}}],["everyth",{"_index":674,"title":{},"body":{"index.html":{}}}],["exce",{"_index":360,"title":{},"body":{"components/UserInputComponent.html":{}}}],["exeed",{"_index":263,"title":{},"body":{"components/BoardComponent.html":{}}}],["exist",{"_index":147,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["export",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"overview.html":{},"classes/tile.html":{}}}],["failur",{"_index":295,"title":{},"body":{"components/BoardComponent.html":{}}}],["fals",{"_index":218,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["fan",{"_index":415,"title":{},"body":{"classes/board.html":{}}}],["favicon",{"_index":678,"title":{},"body":{"index.html":{}}}],["featur",{"_index":626,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":332,"title":{},"body":{"components/UserInputComponent.html":{}}}],["few",{"_index":570,"title":{},"body":{"index.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"index.html":{},"classes/tile.html":{}}}],["finish",{"_index":178,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"index.html":{}}}],["first",{"_index":669,"title":{},"body":{"index.html":{}}}],["fix",{"_index":558,"title":{},"body":{"index.html":{}}}],["flag",{"_index":143,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{},"classes/tile.html":{}}}],["flagcheck",{"_index":89,"title":{},"body":{"components/BoardComponent.html":{}}}],["flagcheck(row",{"_index":136,"title":{},"body":{"components/BoardComponent.html":{}}}],["flagcount",{"_index":78,"title":{},"body":{"components/BoardComponent.html":{}}}],["flaggedmin",{"_index":79,"title":{},"body":{"components/BoardComponent.html":{}}}],["flagtil",{"_index":721,"title":{},"body":{"classes/tile.html":{}}}],["font",{"_index":683,"title":{},"body":{"index.html":{}}}],["for(let",{"_index":431,"title":{},"body":{"classes/board.html":{}}}],["form",{"_index":648,"title":{},"body":{"index.html":{}}}],["format",{"_index":205,"title":{},"body":{"components/BoardComponent.html":{}}}],["formbuild",{"_index":319,"title":{},"body":{"components/UserInputComponent.html":{}}}],["formgroup",{"_index":334,"title":{},"body":{"components/UserInputComponent.html":{}}}],["formsmodul",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":554,"title":{},"body":{"index.html":{}}}],["freez",{"_index":634,"title":{},"body":{"index.html":{}}}],["function",{"_index":129,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"index.html":{}}}],["g415",{"_index":538,"title":{},"body":{"index.html":{}}}],["gain",{"_index":519,"title":{},"body":{"index.html":{}}}],["game",{"_index":131,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{},"classes/tile.html":{}}}],["game/covered.png",{"_index":690,"title":{},"body":{"index.html":{}}}],["game/empty.png",{"_index":691,"title":{},"body":{"index.html":{}}}],["game/mine.png",{"_index":692,"title":{},"body":{"index.html":{}}}],["game/numb",{"_index":693,"title":{},"body":{"index.html":{}}}],["gameoverdialog",{"_index":90,"title":{},"body":{"components/BoardComponent.html":{}}}],["gener",{"_index":132,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"index.html":{},"classes/tile.html":{}}}],["get",{"_index":492,"title":{"index.html":{}},"body":{}}],["github",{"_index":522,"title":{},"body":{"index.html":{}}}],["given",{"_index":384,"title":{},"body":{"classes/board.html":{}}}],["go",{"_index":667,"title":{},"body":{"index.html":{}}}],["goe",{"_index":391,"title":{},"body":{"classes/board.html":{}}}],["good",{"_index":602,"title":{},"body":{"index.html":{}}}],["googl",{"_index":601,"title":{},"body":{"index.html":{}}}],["gotten",{"_index":540,"title":{},"body":{"index.html":{}}}],["group",{"_index":533,"title":{},"body":{"index.html":{}}}],["grove",{"_index":579,"title":{},"body":{"index.html":{}}}],["happen",{"_index":637,"title":{},"body":{"index.html":{}}}],["haswon",{"_index":80,"title":{},"body":{"components/BoardComponent.html":{}}}],["heirarchi",{"_index":535,"title":{},"body":{"index.html":{}}}],["help",{"_index":661,"title":{},"body":{"index.html":{}}}],["hit",{"_index":420,"title":{},"body":{"classes/board.html":{}}}],["hour",{"_index":260,"title":{},"body":{"components/BoardComponent.html":{}}}],["hous",{"_index":512,"title":{},"body":{"index.html":{}}}],["howl",{"_index":226,"title":{},"body":{"components/BoardComponent.html":{}}}],["howler",{"_index":227,"title":{},"body":{"components/BoardComponent.html":{}}}],["html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"index.html":{}}}],["http://lui",{"_index":686,"title":{},"body":{"index.html":{}}}],["http://www.simplygoodcode.com/2014/04/angularj",{"_index":709,"title":{},"body":{"index.html":{}}}],["https://compodoc.github.io/compodoc",{"_index":677,"title":{},"body":{"index.html":{}}}],["https://fontawesome.com/icons/bomb?style=solid",{"_index":679,"title":{},"body":{"index.html":{}}}],["https://fontawesome.com/v4.7.0/icon/book",{"_index":681,"title":{},"body":{"index.html":{}}}],["https://fontawesome.com/v4.7.0/icon/github",{"_index":682,"title":{},"body":{"index.html":{}}}],["https://fonts.google.com/specimen/jura",{"_index":684,"title":{},"body":{"index.html":{}}}],["https://minesweep",{"_index":498,"title":{},"body":{"index.html":{}}}],["https://www.npmjs.com/package/ng2",{"_index":676,"title":{},"body":{"index.html":{}}}],["icon",{"_index":680,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["if(!this.cheatrev",{"_index":745,"title":{},"body":{"classes/tile.html":{}}}],["if(!this.isgameov",{"_index":277,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(!this.stoptim",{"_index":255,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.board.rows[row][col].isbomb",{"_index":269,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.board.rows[row][col].isflag",{"_index":285,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.flaggedmin",{"_index":270,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.isflag",{"_index":746,"title":{},"body":{"classes/tile.html":{}}}],["ii/index.html",{"_index":712,"title":{},"body":{"index.html":{}}}],["imag",{"_index":735,"title":{},"body":{"classes/tile.html":{}}}],["implement",{"_index":70,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"index.html":{}}}],["import",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["index",{"_index":74,"title":{"index.html":{}},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":585,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["inform",{"_index":170,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["init",{"_index":116,"title":{},"body":{"components/BoardComponent.html":{}}}],["initi",{"_index":107,"title":{},"body":{"components/BoardComponent.html":{}}}],["input",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"index.html":{}}}],["input.compon",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["input.component.css",{"_index":311,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.html",{"_index":312,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.t",{"_index":310,"title":{},"body":{"components/UserInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:107",{"_index":325,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:14",{"_index":335,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:15",{"_index":336,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:16",{"_index":338,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:17",{"_index":337,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:18",{"_index":339,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:19",{"_index":320,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:33",{"_index":329,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:44",{"_index":323,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:60",{"_index":330,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input/us",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"components/UserInputComponent.html":{},"coverage.html":{}}}],["inspir",{"_index":708,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":322,"title":{},"body":{"components/UserInputComponent.html":{}}}],["instead",{"_index":665,"title":{},"body":{"index.html":{}}}],["interact",{"_index":177,"title":{},"body":{"components/BoardComponent.html":{}}}],["isbomb",{"_index":718,"title":{},"body":{"classes/tile.html":{}}}],["isflag",{"_index":719,"title":{},"body":{"classes/tile.html":{}}}],["isgameov",{"_index":81,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["isoutofflag",{"_index":82,"title":{},"body":{"components/BoardComponent.html":{}}}],["isrev",{"_index":720,"title":{},"body":{"classes/tile.html":{}}}],["issu",{"_index":606,"title":{},"body":{"index.html":{}}}],["isvalid",{"_index":355,"title":{},"body":{"components/UserInputComponent.html":{}}}],["it'",{"_index":195,"title":{},"body":{"components/BoardComponent.html":{}}}],["iter",{"_index":200,"title":{},"body":{"components/BoardComponent.html":{}}}],["javascript",{"_index":513,"title":{},"body":{"index.html":{}}}],["jordan",{"_index":553,"title":{},"body":{"index.html":{}}}],["js",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["know",{"_index":161,"title":{},"body":{"components/BoardComponent.html":{}}}],["lab",{"_index":552,"title":{},"body":{"index.html":{}}}],["last",{"_index":542,"title":{},"body":{"index.html":{}}}],["later",{"_index":531,"title":{},"body":{"index.html":{}}}],["learn",{"_index":595,"title":{},"body":{"index.html":{}}}],["led",{"_index":654,"title":{},"body":{"index.html":{}}}],["leep",{"_index":537,"title":{},"body":{"index.html":{}}}],["left",{"_index":193,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["legend",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"overview.html":{}}}],["let",{"_index":160,"title":{},"body":{"components/BoardComponent.html":{}}}],["link",{"_index":497,"title":{},"body":{"index.html":{}}}],["list",{"_index":567,"title":{},"body":{"index.html":{}}}],["live",{"_index":296,"title":{},"body":{"components/BoardComponent.html":{}}}],["locat",{"_index":398,"title":{},"body":{"classes/board.html":{}}}],["log",{"_index":501,"title":{},"body":{"index.html":{}}}],["logic",{"_index":577,"title":{},"body":{"index.html":{}}}],["longer",{"_index":619,"title":{},"body":{"index.html":{}}}],["look",{"_index":562,"title":{},"body":{"index.html":{}}}],["loos",{"_index":653,"title":{},"body":{"index.html":{}}}],["lost",{"_index":163,"title":{},"body":{"components/BoardComponent.html":{}}}],["lot",{"_index":600,"title":{},"body":{"index.html":{}}}],["made",{"_index":566,"title":{},"body":{"index.html":{}}}],["make",{"_index":523,"title":{},"body":{"index.html":{},"classes/tile.html":{}}}],["mani",{"_index":407,"title":{},"body":{"classes/board.html":{}}}],["master",{"_index":618,"title":{},"body":{"index.html":{}}}],["match",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["math.floor(minut",{"_index":261,"title":{},"body":{"components/BoardComponent.html":{}}}],["math.floor(this.timercount",{"_index":258,"title":{},"body":{"components/BoardComponent.html":{}}}],["matinputmodul",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":629,"title":{},"body":{"index.html":{}}}],["mckenna",{"_index":578,"title":{},"body":{"index.html":{}}}],["meet",{"_index":500,"title":{},"body":{"index.html":{}}}],["member",{"_index":503,"title":{},"body":{"index.html":{},"classes/tile.html":{}}}],["member'",{"_index":651,"title":{},"body":{"index.html":{}}}],["merg",{"_index":608,"title":{},"body":{"index.html":{}}}],["messag",{"_index":631,"title":{},"body":{"index.html":{}}}],["met",{"_index":599,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["method",{"_index":87,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["middl",{"_index":559,"title":{},"body":{"index.html":{}}}],["mine",{"_index":196,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{}}}],["minecount",{"_index":99,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["mines_plac",{"_index":428,"title":{},"body":{"classes/board.html":{}}}],["minesweep",{"_index":365,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{}}}],["minut",{"_index":257,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["miscellan",{"_index":747,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":284,"title":{},"body":{"components/BoardComponent.html":{}}}],["model",{"_index":561,"title":{},"body":{"index.html":{}}}],["models/board",{"_index":225,"title":{},"body":{"components/BoardComponent.html":{}}}],["modul",{"_index":41,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":660,"title":{},"body":{"index.html":{}}}],["much",{"_index":659,"title":{},"body":{"index.html":{}}}],["name",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["necessari",{"_index":146,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["need",{"_index":179,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"index.html":{}}}],["new",{"_index":165,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"index.html":{}}}],["newboard",{"_index":316,"title":{},"body":{"components/UserInputComponent.html":{}}}],["newgam",{"_index":91,"title":{},"body":{"components/BoardComponent.html":{}}}],["next",{"_index":508,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":224,"title":{},"body":{"components/BoardComponent.html":{},"dependencies.html":{}}}],["ngmodul",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["ngonchang",{"_index":92,"title":{},"body":{"components/BoardComponent.html":{}}}],["ngoninit",{"_index":305,"title":{},"body":{"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["non",{"_index":289,"title":{},"body":{"components/BoardComponent.html":{}}}],["none",{"_index":113,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["notic",{"_index":636,"title":{},"body":{"index.html":{}}}],["now",{"_index":327,"title":{},"body":{"components/UserInputComponent.html":{}}}],["npm",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["num",{"_index":100,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["number",{"_index":121,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["numofcolumn",{"_index":350,"title":{},"body":{"components/UserInputComponent.html":{}}}],["numofrow",{"_index":348,"title":{},"body":{"components/UserInputComponent.html":{}}}],["object",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["old",{"_index":603,"title":{},"body":{"index.html":{}}}],["on",{"_index":611,"title":{},"body":{"index.html":{}}}],["onc",{"_index":418,"title":{},"body":{"classes/board.html":{}}}],["onchang",{"_index":71,"title":{},"body":{"components/BoardComponent.html":{}}}],["oninit",{"_index":302,"title":{},"body":{"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["option",{"_index":119,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["otherwis",{"_index":187,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["out",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"classes/board.html":{},"overview.html":{}}}],["over",{"_index":194,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{},"classes/tile.html":{}}}],["overcom",{"_index":592,"title":{},"body":{"index.html":{}}}],["overlap",{"_index":655,"title":{},"body":{"index.html":{}}}],["overview",{"_index":716,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":471,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":560,"title":{},"body":{"index.html":{}}}],["pancak",{"_index":547,"title":{},"body":{"index.html":{}}}],["param",{"_index":228,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["paramet",{"_index":117,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["part",{"_index":711,"title":{},"body":{"index.html":{}}}],["particular",{"_index":662,"title":{},"body":{"index.html":{}}}],["pass",{"_index":333,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{}}}],["perez.s3",{"_index":687,"title":{},"body":{"index.html":{}}}],["person",{"_index":612,"title":{},"body":{"index.html":{}}}],["peterson",{"_index":583,"title":{},"body":{"index.html":{}}}],["place",{"_index":142,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["placemin",{"_index":371,"title":{},"body":{"classes/board.html":{}}}],["placenumb",{"_index":372,"title":{},"body":{"classes/board.html":{}}}],["placenumber(row",{"_index":403,"title":{},"body":{"classes/board.html":{}}}],["plan",{"_index":650,"title":{},"body":{"index.html":{}}}],["platform",{"_index":598,"title":{},"body":{"index.html":{}}}],["play",{"_index":172,"title":{},"body":{"components/BoardComponent.html":{}}}],["playaudio",{"_index":93,"title":{},"body":{"components/BoardComponent.html":{}}}],["playaudio(sound",{"_index":173,"title":{},"body":{"components/BoardComponent.html":{}}}],["player",{"_index":395,"title":{},"body":{"classes/board.html":{}}}],["pop",{"_index":150,"title":{},"body":{"components/BoardComponent.html":{}}}],["post",{"_index":114,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["pre",{"_index":112,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["present",{"_index":155,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["previous",{"_index":616,"title":{},"body":{"index.html":{}}}],["problem",{"_index":663,"title":{},"body":{"index.html":{}}}],["process",{"_index":525,"title":{},"body":{"index.html":{}}}],["product",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":710,"title":{},"body":{"index.html":{}}}],["project",{"_index":493,"title":{},"body":{"index.html":{}}}],["project.firebaseapp.com/assets/documentation/index.html",{"_index":499,"title":{},"body":{"index.html":{}}}],["properti",{"_index":75,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["provid",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"overview.html":{}}}],["public",{"_index":76,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["push",{"_index":617,"title":{},"body":{"index.html":{}}}],["random",{"_index":402,"title":{},"body":{"classes/board.html":{}}}],["reach",{"_index":419,"title":{},"body":{"classes/board.html":{}}}],["reactiveformsmodul",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["reappear",{"_index":620,"title":{},"body":{"index.html":{}}}],["recurs",{"_index":414,"title":{},"body":{"classes/board.html":{}}}],["recursive_rev",{"_index":373,"title":{},"body":{"classes/board.html":{}}}],["recursive_reveal(row",{"_index":412,"title":{},"body":{"classes/board.html":{}}}],["regard",{"_index":622,"title":{},"body":{"index.html":{}}}],["remain",{"_index":152,"title":{},"body":{"components/BoardComponent.html":{}}}],["remov",{"_index":274,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["repositori",{"_index":517,"title":{},"body":{"index.html":{}}}],["repres",{"_index":208,"title":{},"body":{"components/BoardComponent.html":{}}}],["reset",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"components/BoardComponent.html":{},"overview.html":{}}}],["resolv",{"_index":607,"title":{},"body":{"index.html":{}}}],["result",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["retrospect",{"_index":571,"title":{},"body":{"index.html":{}}}],["return",{"_index":134,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["reveal",{"_index":191,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["revealedtil",{"_index":167,"title":{},"body":{"components/BoardComponent.html":{}}}],["revealedtilescount",{"_index":83,"title":{},"body":{"components/BoardComponent.html":{}}}],["revealing/recurs",{"_index":421,"title":{},"body":{"classes/board.html":{}}}],["revealmin",{"_index":374,"title":{},"body":{"classes/board.html":{}}}],["revealtil",{"_index":722,"title":{},"body":{"classes/tile.html":{}}}],["right",{"_index":446,"title":{},"body":{"classes/board.html":{},"index.html":{}}}],["role",{"_index":652,"title":{},"body":{"index.html":{}}}],["roles/which",{"_index":534,"title":{},"body":{"index.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["row",{"_index":153,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{},"classes/tile.html":{}}}],["rowcount",{"_index":101,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["rxj",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["schedul",{"_index":507,"title":{},"body":{"index.html":{}}}],["second",{"_index":262,"title":{},"body":{"components/BoardComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["separ",{"_index":666,"title":{},"body":{"index.html":{}}}],["set",{"_index":324,"title":{},"body":{"components/UserInputComponent.html":{},"classes/tile.html":{}}}],["seth",{"_index":582,"title":{},"body":{"index.html":{}}}],["settimeout",{"_index":290,"title":{},"body":{"components/BoardComponent.html":{}}}],["setuptim",{"_index":94,"title":{},"body":{"components/BoardComponent.html":{}}}],["sever",{"_index":556,"title":{},"body":{"index.html":{}}}],["show",{"_index":397,"title":{},"body":{"classes/board.html":{}}}],["showboard",{"_index":314,"title":{},"body":{"components/UserInputComponent.html":{}}}],["simpl",{"_index":115,"title":{},"body":{"components/BoardComponent.html":{},"dependencies.html":{},"index.html":{}}}],["simpletim",{"_index":104,"title":{},"body":{"components/BoardComponent.html":{}}}],["someth",{"_index":614,"title":{},"body":{"index.html":{}}}],["sometim",{"_index":610,"title":{},"body":{"index.html":{}}}],["sound",{"_index":180,"title":{},"body":{"components/BoardComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["specif",{"_index":589,"title":{},"body":{"index.html":{}}}],["split",{"_index":573,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/board/board.component.t",{"_index":68,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/board/board.component.ts:100",{"_index":183,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:120",{"_index":199,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:15",{"_index":122,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:16",{"_index":125,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:17",{"_index":123,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:18",{"_index":124,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:181",{"_index":175,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:19",{"_index":213,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:20",{"_index":212,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:204",{"_index":138,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:21",{"_index":222,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:22",{"_index":215,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:23",{"_index":216,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:24",{"_index":211,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:248",{"_index":189,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:25",{"_index":221,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:26",{"_index":223,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:27",{"_index":220,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:28",{"_index":219,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:283",{"_index":154,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:29",{"_index":106,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:300",{"_index":126,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:54",{"_index":168,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:65",{"_index":164,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:83",{"_index":181,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/documentation/documentation.component.t",{"_index":300,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{}}}],["src/app/documentation/documentation.component.ts:11",{"_index":306,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/documentation/documentation.component.ts:15",{"_index":307,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/models/board.t",{"_index":366,"title":{},"body":{"classes/board.html":{},"coverage.html":{}}}],["src/app/models/board.ts:10",{"_index":376,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:129",{"_index":387,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:151",{"_index":383,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:168",{"_index":423,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:195",{"_index":413,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:322",{"_index":390,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:42",{"_index":400,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:5",{"_index":378,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:6",{"_index":381,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:7",{"_index":380,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:70",{"_index":404,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:8",{"_index":377,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:9",{"_index":379,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/tile.t",{"_index":460,"title":{},"body":{"coverage.html":{},"classes/tile.html":{}}}],["src/app/models/tile.ts:2",{"_index":728,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:28",{"_index":730,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:3",{"_index":726,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:4",{"_index":727,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:46",{"_index":736,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:5",{"_index":724,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:59",{"_index":732,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:6",{"_index":729,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:7",{"_index":725,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:8",{"_index":723,"title":{},"body":{"classes/tile.html":{}}}],["src/app/us",{"_index":309,"title":{},"body":{"components/UserInputComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":120,"title":{},"body":{"components/BoardComponent.html":{}}}],["stage",{"_index":646,"title":{},"body":{"index.html":{}}}],["start",{"_index":130,"title":{"index.html":{}},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["startup",{"_index":186,"title":{},"body":{"components/BoardComponent.html":{}}}],["stat",{"_index":299,"title":{},"body":{"components/BoardComponent.html":{}}}],["statement",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":159,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"index.html":{}}}],["stoptim",{"_index":84,"title":{},"body":{"components/BoardComponent.html":{}}}],["string",{"_index":174,"title":{},"body":{"components/BoardComponent.html":{}}}],["structur",{"_index":649,"title":{},"body":{"index.html":{}}}],["studio",{"_index":516,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["subscrib",{"_index":182,"title":{},"body":{"components/BoardComponent.html":{}}}],["subscribetim",{"_index":95,"title":{},"body":{"components/BoardComponent.html":{}}}],["such",{"_index":587,"title":{},"body":{"index.html":{}}}],["support",{"_index":713,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":673,"title":{},"body":{"index.html":{}}}],["svg",{"_index":714,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":470,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["tackl",{"_index":530,"title":{},"body":{"index.html":{}}}],["task",{"_index":586,"title":{},"body":{"index.html":{}}}],["team",{"_index":642,"title":{},"body":{"index.html":{}}}],["teammat",{"_index":574,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["thing",{"_index":647,"title":{},"body":{"index.html":{}}}],["this.adjbomb",{"_index":742,"title":{},"body":{"classes/tile.html":{}}}],["this.board",{"_index":243,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.cheat_rev",{"_index":298,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.isgameov",{"_index":271,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.recursive_reveal(row",{"_index":288,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.revealmin",{"_index":281,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.rows[row][col].cheatrev",{"_index":282,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.rows[row][col].cheatreveal==fals",{"_index":278,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.rows[row][col].isflag",{"_index":267,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.rows[row][col].isrev",{"_index":265,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.boardformgroup",{"_index":340,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.valid",{"_index":356,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.value.columncount",{"_index":351,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.value.minecount",{"_index":354,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.value.rowcount",{"_index":349,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boundscheck(row",{"_index":432,"title":{},"body":{"classes/board.html":{}}}],["this.cheatrev",{"_index":743,"title":{},"body":{"classes/tile.html":{}}}],["this.col",{"_index":741,"title":{},"body":{"classes/tile.html":{}}}],["this.colcount",{"_index":424,"title":{},"body":{"classes/board.html":{}}}],["this.columncount",{"_index":245,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["this.createform",{"_index":343,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.digitaltim",{"_index":256,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.flagcount",{"_index":239,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.flaggedmin",{"_index":236,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.formbuilder.group",{"_index":341,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.gameoverdialog",{"_index":272,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.haswon",{"_index":233,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.isbomb",{"_index":739,"title":{},"body":{"classes/tile.html":{}}}],["this.isflag",{"_index":740,"title":{},"body":{"classes/tile.html":{}}}],["this.isgameov",{"_index":235,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["this.isrev",{"_index":738,"title":{},"body":{"classes/tile.html":{}}}],["this.minecount",{"_index":240,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["this.newboard",{"_index":362,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.newgam",{"_index":238,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.num",{"_index":364,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.playaudio(\"b",{"_index":280,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.playaudio(\"c",{"_index":287,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.playaudio(\"f",{"_index":266,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.recursive_reveal(row",{"_index":441,"title":{},"body":{"classes/board.html":{}}}],["this.revealedtilescount",{"_index":241,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.row",{"_index":426,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["this.rowcount",{"_index":363,"title":{},"body":{"components/UserInputComponent.html":{},"classes/board.html":{}}}],["this.rows[row",{"_index":434,"title":{},"body":{"classes/board.html":{}}}],["this.rows[row][col",{"_index":447,"title":{},"body":{"classes/board.html":{}}}],["this.rows[row][col].isbomb",{"_index":430,"title":{},"body":{"classes/board.html":{}}}],["this.rows[row][col].isflag",{"_index":438,"title":{},"body":{"classes/board.html":{}}}],["this.setuptim",{"_index":242,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.showboard",{"_index":342,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.st.newtimer('tim",{"_index":249,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.st.subscribe('tim",{"_index":253,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.st.unsubscribe(this.timerid",{"_index":252,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.stoptim",{"_index":234,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.subscribetim",{"_index":251,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.tilesrev",{"_index":425,"title":{},"body":{"classes/board.html":{}}}],["this.timercount",{"_index":246,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.timerid",{"_index":247,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.updatetim",{"_index":254,"title":{},"body":{"components/BoardComponent.html":{}}}],["through",{"_index":392,"title":{},"body":{"classes/board.html":{}}}],["tile",{"_index":141,"title":{"classes/tile.html":{}},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"coverage.html":{},"index.html":{},"classes/tile.html":{}}}],["tile'",{"_index":734,"title":{},"body":{"classes/tile.html":{}}}],["tilecheck",{"_index":96,"title":{},"body":{"components/BoardComponent.html":{}}}],["tilecheck(row",{"_index":188,"title":{},"body":{"components/BoardComponent.html":{}}}],["tilesrev",{"_index":368,"title":{},"body":{"classes/board.html":{}}}],["time",{"_index":209,"title":{},"body":{"components/BoardComponent.html":{}}}],["timer",{"_index":109,"title":{},"body":{"components/BoardComponent.html":{},"dependencies.html":{},"index.html":{}}}],["timercount",{"_index":85,"title":{},"body":{"components/BoardComponent.html":{}}}],["timerid",{"_index":86,"title":{},"body":{"components/BoardComponent.html":{}}}],["togeth",{"_index":664,"title":{},"body":{"index.html":{}}}],["tonight'",{"_index":532,"title":{},"body":{"index.html":{}}}],["top",{"_index":433,"title":{},"body":{"classes/board.html":{}}}],["transfer",{"_index":326,"title":{},"body":{"components/UserInputComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["tri",{"_index":275,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["trial",{"_index":604,"title":{},"body":{"index.html":{}}}],["true",{"_index":268,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["tutori",{"_index":529,"title":{},"body":{"index.html":{}}}],["type",{"_index":118,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["types/howl",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":596,"title":{},"body":{"index.html":{}}}],["unclick",{"_index":685,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":248,"title":{},"body":{"components/BoardComponent.html":{}}}],["under",{"_index":399,"title":{},"body":{"classes/board.html":{}}}],["unsubscrib",{"_index":184,"title":{},"body":{"components/BoardComponent.html":{}}}],["until",{"_index":638,"title":{},"body":{"index.html":{}}}],["up",{"_index":151,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["updat",{"_index":206,"title":{},"body":{"components/BoardComponent.html":{},"classes/tile.html":{}}}],["updatetim",{"_index":97,"title":{},"body":{"components/BoardComponent.html":{}}}],["us",{"_index":230,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["user",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["userinputcompon",{"_index":35,"title":{"components/UserInputComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["vaiabl",{"_index":731,"title":{},"body":{"classes/tile.html":{}}}],["valid",{"_index":169,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"index.html":{}}}],["validateform",{"_index":317,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.compose([validators.min(1",{"_index":347,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.compose([validators.min(2),validators.max(30",{"_index":344,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.pattern('^\\\\d",{"_index":346,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.requir",{"_index":345,"title":{},"body":{"components/UserInputComponent.html":{}}}],["valu",{"_index":202,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["variabl",{"_index":108,"title":{"miscellaneous/variables.html":{}},"body":{"components/BoardComponent.html":{},"coverage.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":495,"title":{},"body":{"index.html":{}}}],["visual",{"_index":515,"title":{},"body":{"index.html":{}}}],["void",{"_index":135,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["want",{"_index":401,"title":{},"body":{"classes/board.html":{}}}],["wasn't",{"_index":286,"title":{},"body":{"components/BoardComponent.html":{}}}],["web",{"_index":505,"title":{},"body":{"index.html":{}}}],["well",{"_index":597,"title":{},"body":{"index.html":{}}}],["west",{"_index":688,"title":{},"body":{"index.html":{}}}],["whatev",{"_index":668,"title":{},"body":{"index.html":{}}}],["whether",{"_index":623,"title":{},"body":{"index.html":{}}}],["while(mines_plac",{"_index":429,"title":{},"body":{"classes/board.html":{}}}],["wildman",{"_index":550,"title":{},"body":{"index.html":{}}}],["win",{"_index":110,"title":{},"body":{"components/BoardComponent.html":{}}}],["within",{"_index":388,"title":{},"body":{"classes/board.html":{}}}],["without",{"_index":411,"title":{},"body":{"classes/board.html":{}}}],["won",{"_index":162,"title":{},"body":{"components/BoardComponent.html":{}}}],["work",{"_index":410,"title":{},"body":{"classes/board.html":{},"index.html":{}}}],["wrap",{"_index":568,"title":{},"body":{"index.html":{}}}],["write",{"_index":588,"title":{},"body":{"index.html":{}}}],["writeup",{"_index":572,"title":{},"body":{"index.html":{}}}],["ye",{"_index":628,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        App Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n* App Component\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nUserInputComponent\n\nUserInputComponent\n\nAppModule -->\n\nUserInputComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BoardComponent\n                            \n                            \n                                DocumentationComponent\n                            \n                            \n                                UserInputComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { UserInputComponent } from './user-input/user-input.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material';\nimport { BoardComponent } from './board/board.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserInputComponent,\n    BoardComponent,\n    DocumentationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/board.component.ts\n\n\n    \n        Description\n    \n    \n        Board Component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board\n                            \n                            \n                                digitalTimer\n                            \n                            \n                                flagCount\n                            \n                            \n                                flaggedMines\n                            \n                            \n                                hasWon\n                            \n                            \n                                isGameOver\n                            \n                            \n                                isOutOfFlags\n                            \n                            \n                                revealedTilesCount\n                            \n                            \n                                stopTimer\n                            \n                            \n                                timerCount\n                            \n                            \n                                timerID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cheating\n                            \n                            \n                                flagCheck\n                            \n                            \n                                gameOverDialog\n                            \n                            \n                                newGame\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                playAudio\n                            \n                            \n                                setupTimer\n                            \n                            \n                                subscribeTimer\n                            \n                            \n                                tileCheck\n                            \n                            \n                                updateTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnCount\n                            \n                            \n                                mineCount\n                            \n                            \n                                num\n                            \n                            \n                                rowCount\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(st: SimpleTimer)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/board.component.ts:29\n                            \n                        \n\n                \n                    \n                            Initializes variables for timer and winning conditions.\nPre: None.\nPost: hasWon, stopTime, isGameOver, simple timer, and flaggedMines have been initalized.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        st\n                                                  \n                                                        \n                                                                    SimpleTimer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columnCount\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mineCount\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        num\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rowCount\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cheating\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheating()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:300\n                            \n                        \n\n\n                \n                    \n                            Calls the cheat_reveal() function to start cheating.\nPre: Game board is generated and game is active.\nPost: cheat_reveal() function has been called.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nflagCheck(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:204\n                            \n                        \n\n\n                \n                    \n                            Checks all conditions on current tile, places flag and adjusts flag count as necessary.\nPre: The board exists.\nPost: flag is placed if allowed, if not alert will pop up if not flags remaining.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameOverDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \ngameOverDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:283\n                            \n                        \n\n\n                \n                    \n                            Presents dialogue at the end of the game.\nPre: Game has been completed.\nPost: Stops timer and lets user know if they won or lost.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Initializes properties for a new game.\nPre: User input has changed.\nPost: flagCount, isGameOver, hasWon, revealedTiles, flaggedMines, board, and the timer component has been initalized.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Starts a new game.\nPre: User provides valid information and clicks \"play game\".\nPost: newGame is called, initializes properties for new game.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playAudio\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayAudio(sound: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:181\n                            \n                        \n\n\n                \n                    \n                            This function plays audio when the user interacts with the board.\nPre: Game must not be finished and board needs to be generated.\nPost: Audio plays when tile is clicked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sound\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setupTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetupTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Resets timerCount and subscribes the timer.\nPre: newGame has been called.\nPost: timerCount is reset and the timer is subscribed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribeTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubscribeTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes timer on application startup, subscribes timer when called otherwise\nPre: setupTimer has been called\nPost: Timer is unsubscribed on application startup, timer is subscribed otherwise\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tileCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \ntileCheck(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:248\n                            \n                        \n\n\n                \n                    \n                            Determines revealing behavior of a left-clicked tile.\nPre: User left-clicks a tile and game is not over.\nPost: tile is revealed, game ends if it's a mine.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the tile being flagged.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the tile being flagged.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Iterates the timerCount, converts value to a digital clock format, updates digitalTimer.\nPre: Timer has been subscribed.\nPost: timerCount has been iterated, digitalTimer correctly represents the time elapsed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            board\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        board:     board\n\n                    \n                \n                    \n                        \n                            Type :     board\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            digitalTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        digitalTimer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flagCount:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flaggedMines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flaggedMines:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasWon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasWon:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isGameOver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isGameOver:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutOfFlags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isOutOfFlags:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealedTilesCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        revealedTilesCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stopTimer:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnChanges, Input } from '@angular/core';\nimport { SimpleTimer } from 'ng2-simple-timer';\nimport { board } from '../models/board';\nimport {Howl, Howler} from 'howler';\n\n/**\n* Board Component\n*/\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css'],\n})\nexport class BoardComponent implements OnChanges {\n  @Input() columnCount: number;\n  @Input() rowCount: number;\n  @Input() mineCount: number;\n  @Input() num: number;\n  flaggedMines: number;\n  flagCount;\n  timerCount: number;\n  hasWon: boolean;\n  isGameOver: boolean;\n  digitalTimer: string;\n  stopTimer: boolean;\n  timerID: string;\n  revealedTilesCount: number;\n  isOutOfFlags = false;\n  public board: board;\n\n  /**\n   * Initializes variables for timer and winning conditions.\n   *\n   * Pre: None.\n   *\n   * Post: hasWon, stopTime, isGameOver, simple timer, and flaggedMines have been initalized.\n   *\n   * @param SimpleTimer Angular class used to display the elapsed time.\n   */\n  constructor(private st: SimpleTimer) {\n    this.hasWon = false;\n    this.stopTimer = false;\n    this.isGameOver = false;\n    this.flaggedMines = 0;\n  }\n\n  /**\n   * Starts a new game.\n   *\n   * Pre: User provides valid information and clicks \"play game\".\n   *\n   * Post: newGame is called, initializes properties for new game.\n   */\n  ngOnChanges() {\n    this.newGame();\n  }\n\n  /**\n   * Initializes properties for a new game.\n   *\n   * Pre: User input has changed.\n   *\n   * Post: flagCount, isGameOver, hasWon, revealedTiles, flaggedMines, board, and the timer component has been initalized.\n   */\n  newGame() {\n    this.flagCount = this.mineCount; //Initialize flagCount\n    this.isGameOver = false;\n    this.hasWon = false;\n    this.flaggedMines = 0;\n    this.revealedTilesCount = 0;\n    this.setupTimer();\n    this.board = new board(this.rowCount, this.columnCount, this.mineCount);\n\n  }\n\n  /**\n   * Resets timerCount and subscribes the timer.\n   *\n   * Pre: newGame has been called.\n   *\n   * Post: timerCount is reset and the timer is subscribed.\n   */\n  setupTimer() {\n    this.stopTimer = false;\n    this.timerCount = 0; //Reset timer count\n    if (this.timerID == undefined) //If timer has not been subscribed\n    {\n      this.st.newTimer('Timer', 1);\n      this.subscribeTimer();\n    }\n  }\n\n  /**\n   * Unsubscribes timer on application startup, subscribes timer when called otherwise\n   *\n   * Pre: setupTimer has been called\n   *\n   * Post: Timer is unsubscribed on application startup, timer is subscribed otherwise\n   */\n  subscribeTimer() {\n    if (this.mineCount == 0) //Application startup\n    {\n      this.st.unsubscribe(this.timerID);\n      this.timerID = undefined;\n    }\n    else\n    {\n      this.stopTimer = false;\n      this.timerID = this.st.subscribe('Timer', () => this.updateTimer());\n    }\n  }\n\n  /**\n   * Iterates the timerCount, converts value to a digital clock format, updates digitalTimer.\n   *\n   * Pre: Timer has been subscribed.\n   *\n   * Post: timerCount has been iterated, digitalTimer correctly represents the time elapsed.\n   */\n  updateTimer()\n  {\n    if(!this.stopTimer) {\n      this.timerCount++;\n\n      /********* Update digital timer string **********/\n\n      this.digitalTimer = \"\"; // Reset value\n\n      // Initializations\n      let minutes = Math.floor(this.timerCount / 60);\n      let hours = Math.floor(minutes / 60);\n      if (hours > 0)\n      {\n        minutes = minutes - hours * 60;\n      }\n      let seconds = this.timerCount % 60;\n\n      // If time has exeeded 1 hour\n      if (hours != 0)\n      {\n        this.digitalTimer += hours + \":\"; //A dd hours\n\n        if (minutes  0 && !this.board.rows[row][col].isRevealed) { // place flag\n        this.playAudio(\"f\");\n        this.board.rows[row][col].isFlagged = true;\n        this.flagCount--;\n        if(this.board.rows[row][col].isBomb) {\n          this.flaggedMines++;\n        }\n        if(this.flaggedMines === this.mineCount) { // check for win\n          this.hasWon = true;\n          this.isGameOver = true;\n          this.board.isGameOver = true;\n          this.gameOverDialog();\n        }\n      }\n      else if (this.flagCount === 0 && !this.board.rows[row][col].isRevealed) {\n        alert(\"No flags remaining, remove a flag and try again.\");\n      }\n    }\n  }\n\n  /**\n   * Determines revealing behavior of a left-clicked tile.\n   *\n   * Pre: User left-clicks a tile and game is not over.\n   *\n   * Post: tile is revealed, game ends if it's a mine.\n   *\n   * @param row The row of the tile being flagged.\n   *\n   * @param col The column of the tile being flagged.\n   */\n  tileCheck(row: number, col: number) {\n\n    if(!this.isGameOver) {\n      if(this.board.rows[row][col].isBomb && (this.board.rows[row][col].cheatReveal==false)) { // bomb was clicked, end game\n        this.playAudio(\"b\");\n        this.board.revealMines();\n        this.isGameOver = true;\n        this.gameOverDialog();\n      }\n      else if (this.board.rows[row][col].cheatReveal)\n      {\n        alert(\"You cannot play while in cheat mode\");\n      }\n      else if(this.board.rows[row][col].isFlagged) { // flagged tile was clicked but wasn't a bomb\n        this.playAudio(\"c\");\n        this.board.rows[row][col].isFlagged = false;\n        this.board.rows[row][col].isRevealed = true;\n        this.flagCount++;\n        this.board.recursive_reveal(row, col);\n      }\n      else { // non-flag, non-bomb tile was clicked, reveal tile\n        this.playAudio(\"c\");\n        this.board.rows[row][col].isRevealed = true;\n        this.board.recursive_reveal(row, col);\n      }\n    }\n  }\n\n  /**\n   * Presents dialogue at the end of the game.\n   *\n   * Pre: Game has been completed.\n   *\n   * Post: Stops timer and lets user know if they won or lost.\n   */\n  gameOverDialog(): void {\n    this.stopTimer = true;\n    if (this.hasWon) {\n      setTimeout(() => alert(\"Congratulations! You win!\"), 500);\n    }\n    else {\n      setTimeout(() => alert(\"We all encounter failures in our lives.\"), 500);\n    }\n  }\n\n  /**\n   * Calls the cheat_reveal() function to start cheating.\n   *\n   * Pre: Game board is generated and game is active.\n   *\n   * Post: cheat_reveal() function has been called.\n   */\n  cheating(): void {\n    console.log(\"in Cheating\");\n    if (!this.board.isGameOver){\n      this.board.cheat_reveal();\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n    \n        Timer\n        \n    \n\n    \n    \n        Flags\n        \n    \n\n    \n        \n        \n            \n                \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                \n            \n        \n    \n    \n    Cheat Mode\n    \n    \n        Stats\n        Mines Flagged: {{flaggedMines}}\n        Time: {{digitalTimer}} \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Timer                            Flags                                                                                                                                                                                                                                                                                                                                                            Cheat Mode                Stats        Mines Flagged: {{flaggedMines}}        Time: {{digitalTimer}}     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentation/documentation.component.ts\n\n\n    \n        Description\n    \n    \n        Documentation Component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                styleUrls\n                documentation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/documentation/documentation.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/documentation/documentation.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Documentation Component\n*/\n@Component({\n  selector: 'app-documentation',\n  templateUrl: './documentation.component.html',\n  styleUrls: ['./documentation.component.css']\n})\nexport class DocumentationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n\n  \n\n    \n      Documentation\n      \n    \n\n    \n      Source Code\n      \n    \n\n  \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Documentation                    Source Code              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInputComponent.html":{"url":"components/UserInputComponent.html","title":"component - UserInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-input/user-input.component.ts\n\n\n    \n        Description\n    \n    \n        User Input Component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-input\n            \n\n            \n                styleUrls\n                user-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardFormGroup\n                            \n                            \n                                columnCount\n                            \n                            \n                                mineCount\n                            \n                            \n                                num\n                            \n                            \n                                rowCount\n                            \n                            \n                                showBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                newBoard\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-input/user-input.component.ts:19\n                            \n                        \n\n                \n                    \n                            Creates instance of the user input class\nPre: None.\nPost: Instance has been created.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Creates validators for the inputs that need to be checked.\nPre: None.\nPost: ColumnCount, RowCount, and MineCount validators are set.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newBoard\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewBoard()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Transfers all user inputs to the board.\nPre: Inputs have been validated.\nPost: Board now has correct column, row, and mine count.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateForm\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Validates user inputs and provides dialog feedback when the user does not pass correct input.\nCalls new board when input has been validated.\nPre: User has provided input.\nPost: newBoard is called after valid input.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boardFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        boardFormGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columnCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mineCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mineCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            num\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        num:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rowCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rowCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showBoard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showBoard:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/**\n* User Input Component\n*/\n@Component({\n  selector: 'app-user-input',\n  templateUrl: './user-input.component.html',\n  styleUrls: ['./user-input.component.css']\n})\nexport class UserInputComponent implements OnInit {\n\n  boardFormGroup: FormGroup;\n  columnCount: number = 0;\n  rowCount: number = 0;\n  mineCount: number = 0;\n  showBoard: boolean;\n  num: number = 0;\n\n  /**\n  * Creates instance of the user input class\n  *\n  * Pre: None.\n  *\n  * Post: Instance has been created.\n  */\n  constructor(private formBuilder: FormBuilder) {\n    this.boardFormGroup = this.formBuilder.group({});\n    this.showBoard = false;\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n   /**\n   * Creates validators for the inputs that need to be checked.\n   *\n   * Pre: None.\n   *\n   * Post: ColumnCount, RowCount, and MineCount validators are set.\n   */\n  createForm(): void {\n    this.boardFormGroup = this.formBuilder.group({\n      ColumnCount: ['', Validators.compose([Validators.min(2),Validators.max(30), Validators.required, Validators.pattern('^\\\\d+$')])],\n      RowCount: ['', Validators.compose([Validators.min(2),Validators.max(30), Validators.required, Validators.pattern('^\\\\d+$')])],\n      MineCount: ['', Validators.compose([Validators.min(1), Validators.required, Validators.pattern('^\\\\d+$')])],\n    });\n  }\n\n   /**\n   * Validates user inputs and provides dialog feedback when the user does not pass correct input.\n   * Calls new board when input has been validated.\n   *\n   * Pre: User has provided input.\n   *\n   * Post: newBoard is called after valid input.\n   */\n  validateForm(): void {\n    var numOfRows = this.boardFormGroup.value.RowCount;\n    var numOfColumns = this.boardFormGroup.value.ColumnCount;\n    var cellCount = numOfRows * numOfColumns;\n    var bombCount = this.boardFormGroup.value.MineCount;\n    var isValid = this.boardFormGroup.valid && bombCount = 2 && numOfColumns >= 2 && numOfRows = 1 && bombCount  2499)\n      {\n        alert('Cell count cannot exceed 2500');\n      }\n    }\n    else\n    {\n      this.newBoard();\n    }\n  }\n\n   /**\n   * Transfers all user inputs to the board.\n   *\n   * Pre: Inputs have been validated.\n   *\n   * Post: Board now has correct column, row, and mine count.\n   */\n  newBoard() {\n    this.columnCount = this.boardFormGroup.value.ColumnCount;\n    this.rowCount = this.boardFormGroup.value.RowCount;\n    this.mineCount= this.boardFormGroup.value.MineCount;\n    this.showBoard = true;\n    this.num = this.num + 1;\n  }\n}\n\n    \n\n    \n        \n\n\n\n  Minesweeper\n\n\n\n    \n      \n      \n        Columns\n        \n      \n\n      \n      \n        Rows\n        \n      \n\n      \n      \n        Mines\n        \n      \n    \n\n    \n    \n    New Game\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Minesweeper                        Columns                                  Rows                                  Mines                              New Game'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/board.html":{"url":"classes/board.html","title":"class - board","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  board\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/board.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                colCount\n                            \n                            \n                                    Public\n                                isGameOver\n                            \n                            \n                                    Public\n                                mineCount\n                            \n                            \n                                    Public\n                                rowCount\n                            \n                            \n                                    Public\n                                rows\n                            \n                            \n                                    Public\n                                tilesRevealed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bombCheck\n                            \n                            \n                                boundsCheck\n                            \n                            \n                                cheat_reveal\n                            \n                            \n                                placeMines\n                            \n                            \n                                placeNumber\n                            \n                            \n                                recursive_reveal\n                            \n                            \n                                revealMines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rows: number, cols: number, mines: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/board.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cols\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mines\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            colCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isGameOver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isGameOver:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mineCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mineCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rowCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rowCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rows:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tilesRevealed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tilesRevealed:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bombCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nbombCheck(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:151\n                            \n                        \n\n\n                \n                    \n                            For a given tile at coordinates (row, col), checks if the tile is a bomb.\nPre: There must be a board in existence.\nPost: Checks if there is a bomb at the given coordinate.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the coordinate to be checked.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the coordinate to be checked.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boundsCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nboundsCheck(row: , col: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:129\n                            \n                        \n\n\n                \n                    \n                            For a given tile at coordinates (row, col), checks if the tile is within the bounds of the board.\nPre: There must be a board in existence.\nPost: Returns true if the tile is within the bounds of the board, returns false otherwise.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the coordinate to be checked.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the coordinate to be checked.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cheat_reveal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheat_reveal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:322\n                            \n                        \n\n\n                \n                    \n                            Goes through the board of tiles and calls the cheatreveal function on\neach tile to reveal them to the player when using the cheat button.\nPre: The board must be generated and the game must not be finished.\nPost: Each tile is revealed to show the player if there is a mine located\nunder the tile.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeMines\n                            \n                            \n                        \n                    \n                \n                \n                    \nplaceMines()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:42\n                            \n                        \n\n\n                \n                    \n                            Given the number of mines the user wanted, places mines at random coordinates.\nPre: There must be a board in existence.\nPost: Places the user-defined number of mines .\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nplaceNumber(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:70\n                            \n                        \n\n\n                \n                    \n                            Calculates what number to place in every tile, then places the correct number according to how many bombs are adjacent to that tile.\nPre: There must be a board in existence.\nPost: Calculates adjacent bombs to any given tile and places numbers accordingly.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the tile that was clicked.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the tile that was clicked.\nchanged it to work without being called from recursive_reveal.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recursive_reveal\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecursive_reveal(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:195\n                            \n                        \n\n\n                \n                    \n                            Clicking on a tile calls the recursive reveal function, the function then reveals tiles\nfanning out in every direction if they are empty or contain a number. Once the function\nreaches a numbered tile, the recursion stops.\nPre: There must be a board in existence.\nPost: When a tile is clicked, tiles fanning out from the clicked tile are revealed.\nIf the function hits a number in any direction, the revealing/recursion ceases.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the clicked tile.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the clicked tile.\nchanged it to not place the numbers on the reveal.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealMines\n                            \n                            \n                        \n                    \n                \n                \n                    \nrevealMines()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:168\n                            \n                        \n\n\n                \n                    \n                            After the user hits a bomb and the game ends, all of the mines are revealed.\nPre: There must be a board in existence.\nPost: If the user hits a bomb and ends the game, reveals all the mines.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { tile } from \"./tile\";\n\nexport class board\n{\n    public isGameOver: boolean;\n    public rows: any[];\n    public rowCount: number;\n    public colCount: number;\n    public mineCount: number;\n    public tilesRevealed: number;\n\n    constructor(rows: number, cols: number, mines: number) {\n        this.rowCount = rows;\n        this.colCount = cols;\n        this.mineCount = mines;\n        this.tilesRevealed = 0;\n        this.isGameOver = false;\n        this.rows = [];\n        for (let i = 0; i  event.preventDefault());\n    }\n\n    /**\n     * Given the number of mines the user wanted, places mines at random coordinates.\n     *\n     * Pre: There must be a board in existence.\n     *\n     * Post: Places the user-defined number of mines .\n     */\n    placeMines()\n    {\n      let mines_placed = 0;\n      while(mines_placed  this.rowCount-1 || col  this.colCount-1) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\n\n  /**\n   * For a given tile at coordinates (row, col), checks if the tile is a bomb.\n   *\n   * Pre: There must be a board in existence.\n   *\n   * Post: Checks if there is a bomb at the given coordinate.\n   *\n   * @param row The row of the coordinate to be checked.\n   *\n   * @param col The column of the coordinate to be checked.\n   */\n  bombCheck(row: number, col: number): boolean {\n    if (this.rows[row][col].isBomb) {\n      return true\n    }\n    else {\n      return false;\n    }\n  }\n\n\n  /**\n   * After the user hits a bomb and the game ends, all of the mines are revealed.\n   *\n   * Pre: There must be a board in existence.\n   *\n   * Post: If the user hits a bomb and ends the game, reveals all the mines.\n   */\n  revealMines() {\n      for(let i = 0; i  0) && !this.isGameOver)\n    {\n      if (this.boundsCheck(row - 1, col - 1)) { // top left tile\n        if (!this.rows[row - 1][col - 1].isBomb && !this.rows[row - 1][col - 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row - 1][col - 1].adjBombs > 0) {\n\n            this.rows[row - 1][col - 1].revealTile();\n          }\n          else {\n            this.rows[row - 1][col - 1].revealTile();\n            this.recursive_reveal(row - 1, col - 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row - 1, col)) { // top tile\n        if (!this.rows[row - 1][col].isBomb && !this.rows[row - 1][col].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row - 1][col].adjBombs > 0){\n\n            this.rows[row - 1][col].revealTile();\n\n\n          }\n          else{\n            this.rows[row - 1][col].revealTile();\n            this.recursive_reveal(row - 1, col);\n\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row - 1, col + 1)) { // top right tile\n        if (!this.rows[row - 1][col + 1].isBomb && !this.rows[row - 1][col + 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row - 1][col + 1].adjBombs > 0) {\n\n            this.rows[row - 1][col + 1].revealTile();\n          }\n          else {\n            this.rows[row - 1][col + 1].revealTile();\n            this.recursive_reveal(row - 1, col + 1);\n\n          }\n          this.tilesRevealed++;\n\n        }\n      }\n      if (this.boundsCheck(row, col - 1)) { // left tile\n        if (!this.rows[row][col - 1].isBomb && !this.rows[row][col - 1].isRevealed && !this.rows[row][col].isFlagged){\n          if (this.rows[row][col - 1].adjBombs > 0) {\n            this.rows[row][col - 1].revealTile();\n\n          }\n          else {\n            this.rows[row][col - 1].revealTile();\n            this.recursive_reveal(row, col - 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row, col + 1)) { // right tile\n        if (!this.rows[row][col + 1].isBomb && !this.rows[row][col + 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row][col + 1].adjBombs > 0) {\n            this.rows[row][col + 1].revealTile();\n          }\n          else {\n            this.rows[row][col + 1].revealTile();\n            this.recursive_reveal(row, col + 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n    if (this.boundsCheck(row + 1, col)) { // bottom tile\n      if (!this.rows[row + 1][col].isBomb && !this.rows[row + 1][col].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row + 1][col].adjBombs > 0) {\n            this.rows[row + 1][col].revealTile();\n          }\n          else {\n            this.rows[row + 1][col].revealTile();\n            this.recursive_reveal(row + 1, col);\n          }\n        this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row + 1, col - 1)) { // bottom left tile\n        if (!this.rows[row + 1][col - 1].isBomb && !this.rows[row + 1][col - 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row + 1][col - 1].adjBombs > 0) {\n\n            this.rows[row + 1][col - 1].revealTile();\n\n          }\n          else {\n            this.rows[row + 1][col - 1].revealTile();\n            this.recursive_reveal(row + 1, col - 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row + 1, col + 1)) { // bottom right tile\n        if (!this.rows[row + 1][col + 1].isBomb && !this.rows[row + 1][col + 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row + 1][col + 1].adjBombs > 0) {\n\n            this.rows[row + 1][col + 1].revealTile();\n\n          }\n          else {\n            this.rows[row + 1][col + 1].revealTile();\n            this.recursive_reveal(row + 1, col + 1);\n\n          }\n          this.tilesRevealed++;\n\n        }\n      }\n    }\n  }\n  /**\n  *Goes through the board of tiles and calls the cheatreveal function on\n  *each tile to reveal them to the player when using the cheat button.\n  *\n  *Pre: The board must be generated and the game must not be finished.\n  *\n  *Post: Each tile is revealed to show the player if there is a mine located\n  *under the tile.\n  */\n  cheat_reveal() : void\n  {\n    for(let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/board/board.component.ts\n            \n            \n                component\n            \n            \n                BoardComponent\n            \n            \n                44 %\n                (12/27)\n            \n        \n        \n            \n                \n                src/app/documentation/documentation.component.ts\n            \n            \n                component\n            \n            \n                DocumentationComponent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/models/board.ts\n            \n            \n                class\n            \n            \n                board\n            \n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                src/app/models/tile.ts\n            \n            \n                class\n            \n            \n                tile\n            \n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/app/user-input/user-input.component.ts\n            \n            \n                component\n            \n            \n                UserInputComponent\n            \n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @types/howler : ^2.0.5\n        \n            core-js : ^2.5.4\n        \n            ng2-simple-timer : ^6.0.0\n        \n            npm : ^6.4.1\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMinesweeper\nThis project was generated with Angular CLI version 6.1.5.\nDocumentation link: https://minesweeper-project.firebaseapp.com/assets/documentation/index.html\nMeeting Log\n8/31/2018\nIn class, all members present \nDecided on web based implementation, scheduled next meeting \n9/3/2018\nBlake and Bunty's house, all members present \nDecided on JavaScript, downloaded Visual Studio, and created \"Minesweeper\" repository. Each of us downloaded a clone of the repository gained collaborative access on GitHub. Downloaded Angular to make the web-app creation process easier. \n9/5/2018 \nIn class, all members present \nDiscussed the angular tutorial and what we should tackle later in tonight's meeting \n9/5/2018 \nBlake and Bunty's house, all members present \nDetermined group member roles/which component each member will work on, started working on heirarchy and necessary components \n9/6/2018 \nLEEP G415, all members present \nDiscussed how to pass information between components in angular, presented what we had gotten done since the last meeting \n9/7/2018 \nIn Class, all members present \nScheduled next meeting \n9/8/2018 \nBlake and Bunty's house, all members present \nDiscussed what we need to accomplish next,  ate pancakes, created Tile component \n9/10/2018 \nIn Class, Austin Wildman absent \nScheduled next meeting, discussed what we need to accomplish in later meeting \n9/10/2018 \nIn Lab, Blake Jordan absent \nFound a bug where several tables appear when \"New Game\" is clicked, fixed it \n9/10/2018 \nBlake and Bunty's house, Austin Wildman absent \nGot board to appear in the middle of the web page, modelled the tiles to look like minesweeper, added \"Game Over\" functionality when bomb was clicked, added flagging ability with right click \n9/13/2018 \nBlake and Bunty's house, all members present \nMade a To-Do list for wrapping up the project \n9/16/2018 \nBlake and Bunty's house, all members present \nFixed a few last minute bugs, finished documentation \nRetrospective Writeup\nHow was work split between teammates? \nWork was divided into the basic groups: Board Logic (Austin Wildman and McKenna Groves), Visuals (Bunty Dey and Seth Peterson), and Communication between components (Blake Jordan). Later on, after some work was done we split it into individual tasks such as writing specific functions, documentation of specific files, etc. \nWhat were the challenges and how were they overcome or dealt with? \nThe biggest challenge was learning TypeScript and HTML as well as the Angular Platform. That challenge was met with a lot of googling and good old trial and error. We also had some issues with GitHub and resolving merge conflicts. Sometimes if one person deleted something on their branch that had been previously pushed to master but was no longer needed, it would reappear on the master branch because there was confusion regarding whether or not it was needed. Also, one of our validators that stopped the board from crashing was accidentally deleted. \nDid any features not make the demo? \nYes, a max validator for the rows and colums input as well as an error message if the input contained decimals. They were coded and added to the master branch before the code freeze, but were accidentally removed in a merge conflict later on. We didn't notice what had happened until demo day. Our bad! \nIs there anything your team could have done differently? \nYes, during the beginning stages of the project, each of us did our own thing and there was no form or structure to our plan. Each member's roles were loosely defined which led to some overlap when it came to who was doing what. We discovered later on that it was much more helpful to tackle a particular problem together instead of each trying to tackle the problem separately, then just going with whatever worked first. Also, due to issues we encountered with some features being accidentally deleted, we will definitely add a last minute check to the list to make sure everything is working correctly BEFORE demo day.\nWorks Cited\nTimer\nhttps://www.npmjs.com/package/ng2-simple-timer\nDocumentation generator\nhttps://compodoc.github.io/compodoc/\nFavicon\nhttps://fontawesome.com/icons/bomb?style=solid\nDocumentation Link Icon\nhttps://fontawesome.com/v4.7.0/icon/book\nGithub Link Icon\nhttps://fontawesome.com/v4.7.0/icon/github\nFont\nhttps://fonts.google.com/specimen/Jura\nIcons\nUnclicked Tile - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/covered.png\nEmpty Tile - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/empty.png\nMine - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/mine.png\n1 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-1.png\n2 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-2.png\n3 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-3.png\n4 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-4.png\n5 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-5.png\n6 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-6.png\n7 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-7.png\n8 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-8.png\nInspiration\nhttp://www.simplygoodcode.com/2014/04/angularjs-game-programming-making-minesweeper-part-ii/index.html\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nUserInputComponent\n\nUserInputComponent\n\nAppModule -->\n\nUserInputComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/tile.html":{"url":"classes/tile.html","title":"class - tile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  tile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tile.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adjBombs\n                            \n                            \n                                cheatReveal\n                            \n                            \n                                col\n                            \n                            \n                                isBomb\n                            \n                            \n                                isFlagged\n                            \n                            \n                                isRevealed\n                            \n                            \n                                row\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cheatreveal\n                            \n                            \n                                flagTile\n                            \n                            \n                                revealTile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(row: number, col: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/tile.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        col\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adjBombs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adjBombs:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cheatReveal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cheatReveal:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            col\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        col:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBomb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isBomb:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFlagged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isFlagged:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRevealed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isRevealed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        row:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cheatreveal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheatreveal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/tile.ts:28\n                            \n                        \n\n\n                \n                    \n                            Sets the boards cheat reveal vaiable to true and false.\nPre: Board must be generated and game must not be over.\nPost: The cheatReveal variable is set to true or false.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagTile\n                            \n                            \n                        \n                    \n                \n                \n                    \nflagTile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/tile.ts:59\n                            \n                        \n\n\n                \n                    \n                            Flags the clicked(right click) on tile and updates the tile's image.\nPre: There must be a board in existence.\nPost: Changes member variables and the image of the tile.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealTile\n                            \n                            \n                        \n                    \n                \n                \n                    \nrevealTile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/tile.ts:46\n                            \n                        \n\n\n                \n                    \n                            Reveals the clicked on tile and updates the tile's member variables and image.\nPre: There must be a board in existence.\nPost: Reveals the tile if it is not already revealed, changes member variables accordingly.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class tile {\n    isRevealed: boolean;\n    isBomb: boolean;\n    isFlagged: boolean;\n    adjBombs: number;\n    row: number;\n    col: number;\n    cheatReveal: boolean;\n\n\n    constructor(row: number, col: number) {\n        this.isRevealed = false;\n        this.isBomb = false;\n        this.isFlagged = false;\n        this.row = row;\n        this.col = col;\n        this.adjBombs = 0;\n        this.cheatReveal = false; //added variable to make it reveal when the true\n    }\n\n    /**\n    * Sets the boards cheat reveal vaiable to true and false.\n    *\n    * Pre: Board must be generated and game must not be over.\n    *\n    * Post: The cheatReveal variable is set to true or false.\n    */\n    cheatreveal()\n    { console.log(this.cheatReveal);\n      if(!this.cheatReveal)\n      {\n        this.cheatReveal = true;\n      }\n      else\n      {\n        this.cheatReveal = false;\n      }\n    }\n    /**\n     * Reveals the clicked on tile and updates the tile's member variables and image.\n     *\n     * Pre: There must be a board in existence.\n     *\n     * Post: Reveals the tile if it is not already revealed, changes member variables accordingly.\n     */\n    revealTile() {\n        if (this.isRevealed === false && !this.isFlagged){\n            this.isRevealed = true;\n        }\n    }\n\n    /**\n     * Flags the clicked(right click) on tile and updates the tile's image.\n     *\n     * Pre: There must be a board in existence.\n     *\n     * Post: Changes member variables and the image of the tile.\n     */\n    flagTile(){\n        if(this.isFlagged === false){\n            this.isFlagged = true;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
